{"version":3,"sources":["webpack:///./src/stores/userstore.ts","webpack:///./src/components/Header.svelte","webpack:///./src/pages/Index.svelte","webpack:///./src/pages/Login.svelte","webpack:///./src/pages/Profile.svelte","webpack:///./src/stores/issuestore.ts","webpack:///./src/pages/Issues.svelte","webpack:///./src/stores/templatestore.ts","webpack:///./src/stores/activitystore.ts","webpack:///./src/pages/Templates.svelte","webpack:///./src/pages/TimeEntries.svelte","webpack:///./src/pages/Report.svelte","webpack:///./src/App.svelte","webpack:///./src/main.ts"],"names":["_REDMINE_USER","_a","user","localStorage","getItem","jsonUser","JSON","parse","subscribe","set","update","register","currentUser","setItem","stringify","createUserStore","unauthorized","handleNavigation","e","firstname","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","apply","userApiKey","event","preventDefault","res","fetch","json","lastname","login","id","lastLogin","format","$user","last_login_on","_REDMINE_USER_ISSUES","issues","jsonIssues","updateIssues","createIssuesStore","project","name","subject","handleRemove","deleteIndex","tempIssues","Array","from","$issues","index","length","splice","newIssue","issueExists","api_key","push","issue","_REDMINE_USER_TEMPLATES","templates","jsonTemplates","updateTemplates","createTemplatesStore","_REDMINE_ACTIVITIES","activities","sessionStorage","jsonActivities","updateActivities","createActivtiesStore","activity","comments","hours","reduce","initTemplate","now","Date","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","getMilliseconds","a","b","tempTemplates","$templates","newtemplate","undefined","$activities","tempActivities","element","template","spent_on","jornada","diaSemana","toLowerCase","turno","fecha","entries","addEmptyNewEntry","addEmptyDay","issueId","holidays","serverEntries","displayEntries","modalWarning","modalData","quincena","displayWeekends","refreshTable","tempEntries","forEach","diaQuincena","dia","entry","newentry","handleModalOpen","timeEntry","handleAddEmptyEntryInModal","handleModalSave","tempServerEntries","array","callback","asyncForEach","method","body","headers","ok","removeModalEntry","to","getDate","endOfMonth","startOfMonth","addDays","refreshTimeEntries","spent_hours","totalHours","issueEntries","o","calculateTotalHoursPerIssue","currentRoute","routeHandler","route","window","history","replaceState","routeTranslator","location","pathname","app","target","document","Object","assign"],"mappings":"gJACA,MAAMA,EAAgB,eAcf,MAAM,EAbb,WACI,IAAIC,EACJ,MAAMC,EAAsD,QAA9CD,EAAKE,aAAaC,QAAQJ,UAAmC,IAAPC,EAAgBA,EAAK,2BACnFI,EAAWC,KAAKC,MAAML,IACtB,UAAEM,EAAS,IAAEC,EAAG,OAAEC,GAAW,YAASL,GAC5C,MAAO,CACHG,YACAG,SAAWC,GAAgBF,EAAO,KAC9BP,aAAaU,QAAQb,EAAeM,KAAKQ,UAAUF,IAC5CA,KAICG,G,65DCKc,IAAvB,EAAK,GAACC,aAAqB,E,4qCAnB3BC,GAAgB,E,2EAImBC,GAAMD,EAAiBC,EAAG,KAoBjDA,GAAMD,EAAiBC,EAAG,UAS1BA,GAAMD,EAAiBC,EAAG,YAQ1BA,GAAMD,EAAiBC,EAAG,WAQ1BA,GAAMD,EAAiBC,EAAG,cAQ1BA,GAAMD,EAAiBC,EAAG,gBAQ1BA,GAAMD,EAAiBC,EAAG,Y,iICxDpB,EAAK,GAACC,UAAS,G,4NAAf,EAAK,GAACA,UAAS,uB,+RALd,IAAvB,EAAK,GAACH,aAAqB,E,khDC+BZ,EAAU,I,4FAXT,EAAY,K,+BAWb,EAAU,I,cAAV,EAAU,K,+EApCFI,EAAaC,MAAQA,KAAKD,WAAS,SAAeE,EAASC,EAAYC,EAAGC,G,WAExFD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,G,SACtCC,EAAUC,G,IAAeC,EAAKN,EAAUO,KAAKF,I,MAAkBZ,GAAKU,EAAOV,I,SAC3Ee,EAASH,G,IAAeC,EAAKN,EAAiB,MAAEK,I,MAAkBZ,GAAKU,EAAOV,I,SAC9Ea,EAAKG,G,IAJHJ,EAIaI,EAAOC,KAAOR,EAAQO,EAAOJ,QAJ1CA,EAIyDI,EAAOJ,MAJhDA,aAAiBN,EAAIM,E,IAAYN,GAAE,SAAUG,GAAWA,EAAQG,OAITM,KAAKP,EAAWI,GAClGF,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,Y,IAalEM,G,iBATOrB,GAAgB,E,kFACLsB,G,OACXnB,EAAUC,UAAM,OAAQ,GAAQ,YACnCkB,EAAMC,iB,MACAC,QAAYC,MAAM,mCAAmCJ,GAC3D,EAAK3B,eAAe8B,EAAIE,QACxB1B,EAAiB,KAAM,S,aAoBTqB,EAAU,W,iMCvBT,EAAK,GAACnB,UAAS,G,EAAG,EAAK,GAACyB,SAAQ,G,EAItC,EAAK,GAACC,MAAK,G,EAQX,EAAK,GAACC,GAAE,G,oeAJR,EAAS,I,q+BARH,EAAK,GAAC3B,UAAS,sB,YAAG,EAAK,GAACyB,SAAQ,sB,YAItC,EAAK,GAACC,MAAK,sB,YAQX,EAAK,GAACC,GAAE,uB,gGAvBnBC,EAAY,OAAAC,EAAA,GAAOC,EAAMC,cAAe,uB,+FCF9C,MAAMC,EAAuB,sBAetB,MAAM,EAbb,WACI,IAAIlD,EACJ,MAAMmD,EAA+D,QAArDnD,EAAKE,aAAaC,QAAQ+C,UAA0C,IAAPlD,EAAgBA,EAAK,KAC5FoD,EAAa/C,KAAKC,MAAM6C,IACxB,UAAE5C,EAAS,IAAEC,EAAG,OAAEC,GAAW,YAAS2C,GAC5C,MAAO,CACH7C,YACA8C,aAAeF,GAAW1C,EAAO,KAC7BP,aAAaU,QAAQsC,EAAsB7C,KAAKQ,UAAUsC,IACnDA,KAIGG,G,2GC6DH,EAAK,GAACT,GAAE,G,EACR,EAAK,GAACU,QAAQC,KAAI,G,EAClB,EAAK,GAACC,QAAO,G,6tBAFb,EAAK,GAACZ,GAAE,sB,YACR,EAAK,GAACU,QAAQC,KAAI,sB,YAClB,EAAK,GAACC,QAAO,uB,mGAJf,EAAO,G,WAAW,EAAK,GAACZ,G,gBAA7B,OAAI,M,0/BAjBM,EAAQ,I,6OANP,EAAY,K,+CAMb,EAAQ,I,cAAR,EAAQ,I,cAiBb,EAAO,G,oOA1EM1B,EAAaC,MAAQA,KAAKD,WAAS,SAAeE,EAASC,EAAYC,EAAGC,G,WAExFD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,G,SACtCC,EAAUC,G,IAAeC,EAAKN,EAAUO,KAAKF,I,MAAkBZ,GAAKU,EAAOV,I,SAC3Ee,EAASH,G,IAAeC,EAAKN,EAAiB,MAAEK,I,MAAkBZ,GAAKU,EAAOV,I,SAC9Ea,EAAKG,G,IAJHJ,EAIaI,EAAOC,KAAOR,EAAQO,EAAOJ,QAJ1CA,EAIyDI,EAAOJ,MAJhDA,aAAiBN,EAAIM,E,IAAYN,GAAE,SAAUG,GAAWA,EAAQG,OAITM,KAAKP,EAAWI,GAClGF,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,Y,SAwB7D2B,EAAapB,EAAOO,GACzBP,EAAMC,iB,IACFoB,GAAe,EACfC,EAAaC,MAAMC,KAAKC,G,QACnBC,EAAQ,EAAGA,EAAQJ,EAAWK,OAAQD,IAAS,CACpCJ,EAAWI,GACfnB,KAAOA,IACfc,EAAcK,GAGlBL,GAAe,IACfC,EAAWM,OAAOP,EAAa,GAC/B,EAAON,aAAaO,I,IAGxBO,EAAW,E,oBAjCO7B,G,OACXnB,EAAUC,UAAM,OAAQ,GAAQ,YACnCkB,EAAMC,iB,IACF6B,GAAc,EACdR,EAAaC,MAAMC,KAAKC,G,QACnBC,EAAQ,EAAGA,EAAQJ,EAAWK,OAAQD,IAAS,CACpCJ,EAAWI,GACfnB,KAAOsB,IACfC,GAAc,G,IAGF,IAAhBA,EAAuB,C,MACjB5B,QAAYC,MAAM,qBAAqB0B,gBAAuBnB,EAAMqB,WAC1ET,EAAWU,WAAW9B,EAAIE,QAC1B,EAAOW,aAAaO,Q,aA+BVO,EAAQ,wB,WA0BDlD,IAAMyC,EAAazC,EAAGsD,EAAM1B,K,mFCnFzD,MAAM2B,EAA0B,yBAezB,MAAM,EAbb,WACI,IAAIxE,EACJ,MAAMyE,EAAqE,QAAxDzE,EAAKE,aAAaC,QAAQqE,UAA6C,IAAPxE,EAAgBA,EAAK,KAClG0E,EAAgBrE,KAAKC,MAAMmE,IAC3B,UAAElE,EAAS,IAAEC,EAAG,OAAEC,GAAW,YAASiE,GAC5C,MAAO,CACHnE,YACAoE,gBAAkBF,GAAchE,EAAO,KACnCP,aAAaU,QAAQ4D,EAAyBnE,KAAKQ,UAAU4D,IACtDA,KAIMG,GCfnBC,EAAsB,qBAerB,MAAM,EAbb,WACI,IAAI7E,EACJ,MAAM8E,EAAoE,QAAtD9E,EAAK+E,eAAe5E,QAAQ0E,UAAyC,IAAP7E,EAAgBA,EAAK,KACjGgF,EAAiB3E,KAAKC,MAAMwE,IAC5B,UAAEvE,EAAS,IAAEC,EAAG,OAAEC,GAAW,YAASuE,GAC5C,MAAO,CACHzE,YACA0E,iBAAmBH,GAAerE,EAAO,KACrCsE,eAAenE,QAAQiE,EAAqBxE,KAAKQ,UAAUiE,IACpDA,KAIOI,G,4MC4Ec,EAAK,IAACrC,GAAE,G,EAAK,EAAK,IAACU,QAAQC,KAAI,G,EAAK,EAAK,IAACC,QAAO,G,6JAA5D,EAAK,IAACZ,G,mKAAK,EAAK,IAACA,GAAE,sB,YAAK,EAAK,IAACU,QAAQC,KAAI,sB,YAAK,EAAK,IAACC,QAAO,sB,YAA5D,EAAK,IAACZ,M,qFAYQ,EAAQ,IAACW,KAAI,G,iFAA3B,EAAQ,IAACX,G,+FAAK,EAAQ,IAACW,KAAI,sB,YAA3B,EAAQ,IAACX,M,mHA+CnB,EAAc,GAAC,EAAQ,IAAC0B,OAAK,G,EAC7B,EAAiB,GAAC,EAAQ,IAACY,UAAQ,G,EACnC,EAAQ,IAACC,SAAQ,G,EACjB,EAAQ,IAACC,MAAK,G,u0BAHd,EAAc,GAAC,EAAQ,IAACd,OAAK,sB,YAC7B,EAAiB,GAAC,EAAQ,IAACY,UAAQ,sB,YACnC,EAAQ,IAACC,SAAQ,sB,YACjB,EAAQ,IAACC,MAAK,uB,oKAlBP,EAAU,GAACC,OAAO,EAAuB,GAAC,G,oBA7CjD,EAAO,G,YAAW,EAAK,IAACzC,G,iBAA7B,OAAI,M,oDAYC,EAAW,G,YAAc,EAAQ,IAACA,G,iBAAvC,OAAI,M,oDA8CD,EAAU,G,YAAc,EAAQ,IAACA,G,iBAAtC,OAAI,M,m8CA9DyB,IAAjB,EAAW,GAAC0B,OAAK,8B,0LAYG,IAApB,EAAW,GAACY,UAAQ,8B,s8BAZpB,EAAW,GAACZ,O,+JAYZ,EAAW,GAACY,U,mGAaZ,EAAW,GAACC,U,mGAWZ,EAAW,GAACC,O,4ZAxCb,EAAY,K,gCAQhB,EAAO,G,mEAJF,EAAW,GAACd,O,aAgBjB,EAAW,G,mEAJN,EAAW,GAACY,U,eAaZ,EAAW,GAACC,U,cAAZ,EAAW,GAACA,U,4BAWZ,EAAW,GAACC,O,cAAZ,EAAW,GAACA,O,YAaV,EAAU,GAACC,OAAO,EAAuB,GAAC,sB,eAanD,EAAU,G,qOA/GlBC,I,MACCC,EAAM,IAAIC,K,OAEZ5C,GAAI,GAAG2C,EAAIE,gBAAgBF,EAAIG,aAAaH,EAAII,WAAWJ,EAAIK,aAAaL,EAAIM,eAAeN,EAAIO,eAAeP,EAAIQ,oBACtHzB,MAAO,EACPY,SAAU,EACVC,SAAU,GACVC,MAAO,G,SA2F8BY,EAAGC,IAAMD,EAAIC,EAAEb,M,uJAvItClE,EAAaC,MAAQA,KAAKD,WAAS,SAAeE,EAASC,EAAYC,EAAGC,G,WAEhFD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,G,SACtCC,EAAUC,G,IAAeC,EAAKN,EAAUO,KAAKF,I,MAAkBZ,GAAKU,EAAOV,I,SAC3Ee,EAASH,G,IAAeC,EAAKN,EAAiB,MAAEK,I,MAAkBZ,GAAKU,EAAOV,I,SAC9Ea,EAAKG,G,IAJHJ,EAIaI,EAAOC,KAAOR,EAAQO,EAAOJ,QAJ1CA,EAIyDI,EAAOJ,MAJhDA,aAAiBN,EAAIM,E,IAAYN,GAAE,SAAUG,GAAWA,EAAQG,OAITM,KAAKP,EAAWI,GAClGF,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,Y,SAgB7D2B,EAAapB,EAAOO,GACzBP,EAAMC,iB,IACFoB,GAAe,EACfwC,EAAgBtC,MAAMC,KAAKsC,G,QACtBpC,EAAQ,EAAGA,EAAQmC,EAAclC,OAAQD,IAAS,CACvCmC,EAAcnC,GAClBnB,KAAOA,IACfc,EAAcK,GAGlBL,GAAe,IACfwC,EAAcjC,OAAOP,EAAa,GAClC,EAAUgB,gBAAgBwB,I,IAmC9BE,EAAcd,IAClB,YAAQ,IAAMpE,OAAU,OAAQ,OAAQ,GAAQ,Y,QACjBmF,IAAvBtD,EAAMjC,cAAqD,IAAvBwF,EAAYtC,OAAc,C,MACxDzB,QAAYC,MAAM,8CAA8CO,EAAMqB,SACtEmC,QAAuBhE,EAAIE,OACjC,EAAWuC,iBAAiBuB,Q,wBA3DdlE,GAClBA,EAAMC,iB,IACF4D,EAAgBtC,MAAMC,KAAKsC,GAC/BD,EAAc7B,KAAK+B,GACnB,EAAU1B,gBAAgBwB,G,IAC1BE,EAAcd,M,WA2BSJ,G,IACnBlD,EAAS,G,QACJ+B,EAAQ,EAAGA,EAAQuC,EAAYtC,OAAQD,IAAS,C,MAC/CyC,EAAUF,EAAYvC,G,GACxByC,EAAQ5D,KAAOsC,EAAU,CACzBlD,EAASwE,EAAQjD,K,cAIlBvB,G,SAEasC,G,IAChBtC,EAAS,G,QACJ+B,EAAQ,EAAGA,EAAQD,EAAQE,OAAQD,IAAS,C,MAC3CyC,EAAU1C,EAAQC,G,GACpByC,EAAQ5D,KAAO0B,EAAO,CACtBtC,EAASwE,EAAQhD,Q,cAIlBxB,G,WAmBaoE,EAAY9B,MAAK,kB,mBAYjB8B,EAAYlB,SAAQ,kB,mBAapBkB,EAAYjB,SAAQ,W,mBAWpBiB,EAAYhB,MAAK,wB,WAoCZpE,IAAMyC,EAAazC,EAAGyF,EAAS7D,K,yeCwGzC,EAAS,IAAC8D,SAAQ,G,EAAG,EAAS,IAACC,QAAQC,UAAS,G,EAChD,EAAS,IAAC1B,SAAQ,G,EAClB,EAAS,IAACC,SAAQ,G,EAClB,EAAS,IAACC,MAAK,G,iqBAIG,EAAS,IAACxC,GAAK,EAAI,cAAgB,gB,iKARjD,EAAS,IAAC+D,QAAQC,UAAUC,eAAW,oB,4YAC3C,EAAS,IAACH,SAAQ,sB,eAAG,EAAS,IAACC,QAAQC,UAAS,sB,eAChD,EAAS,IAAC1B,SAAQ,sB,eAClB,EAAS,IAACC,SAAQ,sB,eAClB,EAAS,IAACC,MAAK,sB,8BAIG,EAAS,IAACxC,GAAK,EAAI,cAAgB,iB,oDARjD,EAAS,IAAC+D,QAAQC,UAAUC,eAAW,oB,+FA2EnC,EAAK,IAACjE,GAAE,G,EACR,EAAK,IAACU,QAAQC,KAAI,G,kIAFN,EAAK,IAACX,G,sJAClB,EAAK,IAACA,GAAE,sB,gBACR,EAAK,IAACU,QAAQC,KAAI,sB,gBAFN,EAAK,IAACX,M,sFAcQ,EAAQ,IAACW,KAAI,G,iFAA3B,EAAQ,IAACX,G,mGAAK,EAAQ,IAACW,KAAI,sB,gBAA3B,EAAQ,IAACX,M,oJAfnB,EAAO,G,WAAW,EAAK,IAACA,G,gBAA7B,OAAI,M,0FAcC,EAAW,G,WAAc,EAAQ,IAACA,G,gBAAvC,OAAI,M,23BAlBiB,IAAX,EAAK,IAAC0B,OAAK,e,iKAcG,IAAd,EAAK,IAACY,UAAQ,e,6pBAdd,EAAK,IAACZ,O,6HAcN,EAAK,IAACY,U,iEAYN,EAAK,IAACC,U,iEAUN,EAAK,IAACC,O,iPAhCX,EAAO,G,wEAJF,EAAK,IAACd,O,iBAkBX,EAAW,G,qEAJN,EAAK,IAACY,U,mBAYN,EAAK,IAACC,U,cAAN,EAAK,IAACA,U,gCAUN,EAAK,IAACC,O,cAAN,EAAK,IAACA,Q,kPAxED,EAAS,GAAC0B,MAAMF,UAAS,G,GACnD,EAAS,GAACE,MAAMC,MAAK,G,GAnCjB,EAAc,G,uBAAnB,OAAI,K,4BAkEK,EAAS,GAACC,Q,uBAAf,OAAI,K,soEAlCc,EAAY,GAAG,aAAe,K,glBANjD,G,mdApCiB,EAAe,G,opBAClB,EAAY,I,sBAmDnB,EAAgB,K,mDAsFhB,EAAgB,K,kEA1IN,EAAe,I,uBAU9B,EAAc,G,SAAnB,OAAI,M,4HAAJ,O,kBAkC2B,EAAS,GAACF,MAAMF,UAAS,sB,iBACnD,EAAS,GAACE,MAAMC,MAAK,uB,gCAHA,EAAY,GAAG,aAAe,M,iDAkC3C,EAAS,GAACC,Q,SAAf,OAAI,M,4HAAJ,S,sGArLPC,GAAiBH,G,OAElBJ,SAAUI,EAAMC,MAChBzC,MAAO,EACPY,SAAU,EACVC,SAAU,GACVC,MAAO,G,SAGN8B,GAAYJ,G,OAEblE,IAAK,EACL8D,SAAUI,EAAMC,MAChBI,QAAS,EACT7C,MAAO,sBACPY,SAAU,sBACVC,SAAU,sBACVC,MAAO,EACPuB,QAASG,G,yJAnKa5F,EAAaC,MAAQA,KAAKD,WAAS,SAAeE,EAASC,EAAYC,EAAGC,G,WAExFD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,G,SACtCC,EAAUC,G,IAAeC,EAAKN,EAAUO,KAAKF,I,MAAkBZ,GAAKU,EAAOV,I,SAC3Ee,EAASH,G,IAAeC,EAAKN,EAAiB,MAAEK,I,MAAkBZ,GAAKU,EAAOV,I,SAC9Ea,EAAKG,G,IAJHJ,EAIaI,EAAOC,KAAOR,EAAQO,EAAOJ,QAJ1CA,EAIyDI,EAAOJ,MAJhDA,aAAiBN,EAAIM,E,IAAYN,GAAE,SAAUG,GAAWA,EAAQG,OAITM,KAAKP,EAAWI,GAClGF,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,Y,MAkBhEsF,EAAW,CACb,aACA,aACA,aACA,aACA,aACA,aACA,aACA,c,IAGAC,EACAC,EAEAC,EAGAC,EAPAC,EAAW,GAGXC,GAAkB,E,SA4CbC,I,IACDC,EAAc,GAClBH,EAASI,QAASC,I,MACRd,EAAU,KAAOK,EAAe,CAClCX,SAAUoB,EAAYf,SAEF,IAApBW,GAA+C,IAAnBV,EAAQhD,QAGZ,IAAnBgD,EAAQhD,SACO,IAApB0D,GACoB,IAApBI,EAAYC,KACQ,IAApBD,EAAYC,IALZH,EAAYvD,KAAK6C,GAAYY,IAQxBd,EAAQhD,QACbgD,EAAQa,QAASG,I,IACTC,EAAW,CACXrF,GAAIoF,EAAMpF,GACV8D,SAAUsB,EAAMtB,SAChBS,QAASa,EAAM1D,MAAM1B,GACrB0B,MAAO0D,EAAM1D,MAAMf,KACnB2B,SAAU8C,EAAM9C,SAAS3B,KACzB4B,SAAU6C,EAAM7C,SAChBC,MAAO4C,EAAM5C,MACbuB,QAASmB,GAEbF,EAAYvD,KAAK4D,O,IAI7BX,EAAiBM,G,SAEZM,EAAgB7F,EAAO8F,GAC5B9F,EAAMC,iB,IACNkF,EAAUV,MAAQqB,EAAUxB,QAAO,G,MAC7B5C,EAAQ,KAAQqD,EAAUI,EAAUV,MAAMC,O,IAChDQ,EAC4B,IAAxBC,EAAUV,MAAMiB,KAAqC,IAAxBP,EAAUV,MAAMiB,KAAahE,GAAS,GACnEoE,EAAUvF,GAAK,GAA2B,IAAtBuD,EAAWnC,OAC/BwD,EAAUR,QAAQ3C,KAAK4C,GAAiBkB,EAAUxB,UAE7CR,EAAWnC,OAAS,GAAKmE,EAAUvF,GAAK,G,IAC7C4E,EAAUR,QAAU,GAAH,GACjBb,EAAW0B,QAASpB,IAChBe,EAAUR,QAAQ3C,KAAK,CACnBqC,SAAUyB,EAAUxB,QAAQI,MAC5BzC,MAAOmC,EAASnC,MAChBY,SAAUuB,EAASvB,SACnBC,SAAUsB,EAAStB,SACnBC,MAAOqB,EAASrB,WAKxBoC,EAAUR,QAAQ3C,KAAK4C,GAAiBkB,EAAUxB,U,SAGjDyB,EAA2B/F,GAChCA,EAAMC,iB,IACFsF,EAAchE,MAAMC,KAAK2D,EAAUR,SACvCY,EAAYvD,KAAK4C,GAAiBO,EAAUV,Q,IAC5CU,EAAUR,QAAUY,EAAW,G,SAuB1BS,I,OACEnH,EAAUC,UAAM,OAAQ,GAAQ,Y,IAC/BmH,EAAoB1E,MAAMC,KAAKwD,S,SAqBrBkB,EAAOC,G,OAClBtH,EAAUC,UAAM,OAAQ,GAAQ,Y,QAC1B4C,EAAQ,EAAGA,EAAQwE,EAAMvE,OAAQD,UAChCyE,EAASD,EAAMxE,GAAQA,EAAOwE,MAvBlCE,CAAajB,EAAUR,QAAUR,GAAYtF,EAAUC,UAAM,OAAQ,GAAQ,Y,MACzEoB,QAAYC,MAAM,sCAAsCO,EAAMqB,QAAW,CAC3EsE,OAAQ,OACRC,KAAMvI,KAAKQ,UAAU4F,GACrBoC,QAAS,CACL,eAAgB,uBAGT,IAAXrG,EAAIsG,IACJP,EAAkBjE,WAAW9B,EAAIE,YAGzC4E,EAAgB,KAAOiB,EAAmB,CAAC,WAAY,O,IACvDd,EAAY,CAAEV,MAAO,GAAIE,QAAS,KAClCW,O,SAaCmB,EAAiBzG,EAAO0B,GAC7B1B,EAAMC,iB,IACFsF,EAAchE,MAAMC,KAAK2D,EAAUR,SACnCY,EAAY5D,OAAS,IACrB4D,EAAY3D,OAAOF,EAAO,G,IAC1ByD,EAAUR,QAAUY,EAAW,IA9JvC,YAAQ,IAAM1G,OAAU,OAAQ,OAAQ,GAAQ,Y,MACtCqE,EAAM,IAAIC,K,IACZ3B,EACAkF,E,IACAxD,EAAIyD,UAAY,IAChBnF,EAAO,IAAI2B,KAAKD,EAAIE,cAAeF,EAAIG,WAAY,IACnDqD,EAAK,OAAAE,GAAA,GAAW1D,KAGhB1B,EAAO,OAAAqF,GAAA,GAAa3D,GACpBwD,EAAK,IAAIvD,KAAKD,EAAIE,cAAeF,EAAIG,WAAY,KAE9C7B,GAAQkF,GAAI,C,MACTjC,EAAQ,CACVC,MAAO,OAAAjE,EAAA,GAAOe,EAAM,cACpBkE,IAAKlE,EAAK8B,SACViB,UAAW,OAAA9D,EAAA,GAAOe,EAAM,SAE5BA,EAAO,OAAAsF,GAAA,GAAQtF,EAAM,GACrB4D,EAASpD,KAAKyC,S,SAKMzE,G,OACjBnB,EAAUC,UAAM,OAAQ,GAAQ,Y,GAC/BkB,GACAA,EAAMC,sBAEiB+D,IAAvBtD,EAAMjC,cAA8B2G,EAASzD,OAAQ,C,MAC/CH,EAAO4D,EAAS,GAAGV,MACnBgC,EAAKtB,EAASA,EAASzD,OAAS,GAAG+C,MACnCxE,QAAYC,MAAM,sCAAsCO,EAAMqB,kBAAkBrB,EAAMH,WAAWiB,QAAWkF,KAClH1B,EAAgB,WAAa9E,EAAIE,OAAQ,CAAC,WAAY,OACtDkF,QAZFyB,O,OA1BP,EAAF,EAAE7B,GAAe,GACf,EAAF,EAAED,EAAiB,IAEjB,EAAF,EAAEE,EAAY,CAAEV,MAAO,GAAIE,QAAS,K,oCAiJjCQ,EAAY,CAAEV,MAAO,GAAIE,QAAS,IAAIpD,S,aA+DV8D,EAAe,a,WAsBlB1G,IAAMkH,EAAgBlH,EAAGmH,GAwC3BnH,GAAMoH,EAA2BpH,G,mBAkBpBsD,MAAK,kB,2BAcLY,SAAQ,kB,2BAYRC,SAAQ,W,2BAURC,MAAK,wB,WAQZpE,IAAM8H,EAAiB9H,EAAG+C,G,eAqBnBsE,K,sQC9TP,EAAK,IAAC/E,QAAQC,KAAI,G,EAAK,EAAK,IAAC8F,YAAW,G,6QAAxC,EAAK,IAAC/F,QAAQC,KAAI,sB,YAAK,EAAK,IAAC8F,YAAW,uB,wEAkBtD,EAAS,GAAC3C,SAAQ,G,EAClB,EAAS,GAACxB,SAAS3B,KAAI,G,EACvB,EAAS,GAAC4B,SAAQ,G,EAClB,EAAS,GAACC,MAAK,G,8eAHf,EAAS,GAACsB,SAAQ,sB,YAClB,EAAS,GAACxB,SAAS3B,KAAI,sB,YACvB,EAAS,GAAC4B,SAAQ,sB,YAClB,EAAS,GAACC,MAAK,uB,iFAtBrB,EAAU,G,WAAW,EAAK,IAACxC,G,gBAAhC,OAAI,M,mDAiBK,EAAa,G,qBAAlB,OAAI,K,28BAjBH,EAAU,G,kEAiBN,EAAa,G,QAAlB,OAAI,M,kHAAJ,S,oLA7FkB1B,EAAaC,MAAQA,KAAKD,WAAS,SAAeE,EAASC,EAAYC,EAAGC,G,WAExFD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,G,SACtCC,EAAUC,G,IAAeC,EAAKN,EAAUO,KAAKF,I,MAAkBZ,GAAKU,EAAOV,I,SAC3Ee,EAASH,G,IAAeC,EAAKN,EAAiB,MAAEK,I,MAAkBZ,GAAKU,EAAOV,I,SAC9Ea,EAAKG,G,IAJHJ,EAIaI,EAAOC,KAAOR,EAAQO,EAAOJ,QAJ1CA,EAIyDI,EAAOJ,MAJhDA,aAAiBN,EAAIM,E,IAAYN,GAAE,SAAUG,GAAWA,EAAQG,OAITM,KAAKP,EAAWI,GAClGF,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,Y,IAclEuF,EADAI,EAAW,GAEX6B,EAAaxF,E,OAEjB,YAAQ,IAAM5C,OAAU,OAAQ,OAAQ,GAAQ,Y,MACtCqE,EAAM,IAAIC,K,IACZ3B,EACAkF,E,IACAxD,EAAIyD,UAAY,IAChBnF,EAAO,IAAI2B,KAAKD,EAAIE,cAAeF,EAAIG,WAAY,IACnDqD,EAAK,OAAAE,GAAA,GAAW1D,KAGhB1B,EAAO,OAAAqF,GAAA,GAAa3D,GACpBwD,EAAK,IAAIvD,KAAKD,EAAIE,cAAeF,EAAIG,WAAY,KAE9C7B,GAAQkF,GAAI,C,MACTjC,EAAQ,CACVC,MAAO,OAAAjE,EAAA,GAAOe,EAAM,cACpBkE,IAAKlE,EAAK8B,SACViB,UAAW,OAAA9D,EAAA,GAAOe,EAAM,SAE5BA,EAAO,OAAAsF,GAAA,GAAQtF,EAAM,GACrB4D,EAASpD,KAAKyC,G,IAEdwB,Q,SAIoBjG,G,OACjBnB,EAAUC,UAAM,OAAQ,GAAQ,Y,IAC/Ba,EAAS,G,GACTK,GACAA,EAAMC,sBAEiB+D,IAAvBtD,EAAMjC,cAA8B2G,EAASzD,OAAQ,C,MAC/CH,EAAO4D,EAAS,GAAGV,MACnBgC,EAAKtB,EAASA,EAASzD,OAAS,GAAG+C,MACnCxE,QAAYC,MAAM,sCAAsCO,EAAMqB,kBAAkBrB,EAAMH,WAAWiB,QAAWkF,KAClH/G,EAAS,WAAaO,EAAIE,OAAQ,CAAC,WAAY,O,OAE5CT,KAhBmBoH,I,SAmBGd,G,IAC7B3E,EAAa2F,E,QACRvF,EAAQ,EAAGA,EAAQJ,EAAWK,OAAQD,IAAS,C,MAC9CwF,EAAe,KAAOjB,EAAoBkB,GAAMA,EAAElF,MAAM1B,KAAOe,EAAWI,GAAOnB,IACvFe,EAAWI,GAAOsF,YAAc,KAAME,EAAc,S,IAExDD,EAAa3F,GAxBb8F,CAA4BnB,G,IAC5BjB,EAAgBiB,OAxBjB,EAAF,EAAEjB,EAAgB,I,m9CC+BQ,EAAY,M,kdAJb,EAAY,M,6DAChB,MAAjB,EAAY,GAAQ,EAEE,WAAjB,EAAY,KAAwC,IAAvB,EAAK,GAACvG,aAAqB,EAEvC,aAAjB,EAAY,SAA0CuF,IAAvB,EAAK,GAACvF,aAA0B,EAE9C,YAAjB,EAAY,SAAyCuF,IAAvB,EAAK,GAACvF,aAA0B,EAE7C,eAAjB,EAAY,SAA4CuF,IAAvB,EAAK,GAACvF,aAA0B,EAEhD,iBAAjB,EAAY,SAA8CuF,IAAvB,EAAK,GAACvF,aAA0B,EAElD,YAAjB,EAAY,SAAyCuF,IAAvB,EAAK,GAACvF,aAA0B,E,+jBApBpE4I,E,SAhCKC,EAAatH,EAAOuH,GACzBvH,GAAQA,EAAMC,iBACduH,OAAOC,QAAQC,aAAa,K,SAGPH,G,IACjB5H,E,OACI4H,G,IACC,SACD5H,EAAS,Q,UAER,WACDA,EAAS,U,UAER,UACDA,EAAS,S,UAER,aACDA,EAAS,Y,UAER,eACDA,EAAS,e,UAER,UACDA,EAAS,Y,cAGTA,EAAS,Q,OAGVA,EA5B2BgI,CAAgBJ,GAAQA,G,IAC1DF,EAAeE,G,oCA+BnB,YAAQ,KACJD,EAAa,KAAME,OAAOI,SAASC,YAFpC,EAAF,EAAER,EAAe,K,sFC1ClB,MAAMS,GAAM,I,GAAQ,CAChBC,OAAQC,SAAS1B,OAErBkB,OAASS,OAAOC,OAAOV,OAAQ,CAAEM,IAAKA,KACvB,e","file":"js/main.js?t=881ec4e0","sourcesContent":["import { writable } from 'svelte/store';\r\nconst _REDMINE_USER = \"REDMINE_USER\";\r\nfunction createUserStore() {\r\n    var _a;\r\n    const user = (_a = localStorage.getItem(_REDMINE_USER)) !== null && _a !== void 0 ? _a : '\\{ \\'unauthorized\\': true \\}';\r\n    const jsonUser = JSON.parse(user);\r\n    const { subscribe, set, update } = writable(jsonUser);\r\n    return {\r\n        subscribe,\r\n        register: (currentUser) => update(() => {\r\n            localStorage.setItem(_REDMINE_USER, JSON.stringify(currentUser));\r\n            return currentUser;\r\n        })\r\n    };\r\n}\r\nexport const user = createUserStore();\r\n","<script lang=\"typescript\">import { user } from \"../stores/userstore\";\r\nexport let handleNavigation;\r\n</script>\n\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary mb-3\">\n  <a class=\"navbar-brand\" href=\"/\" on:click={(e) => handleNavigation(e, '/')}>\n    Mini Redmine 2\n  </a>\n  <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#mainnavbar\"\n    aria-controls=\"mainnavbar\"\n    aria-expanded=\"false\"\n    aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\" />\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"mainnavbar\">\n    <ul class=\"navbar-nav mr-auto\">\n      {#if $user.unauthorized === true}\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link\"\n            href=\"/login\"\n            on:click={(e) => handleNavigation(e, '/login')}>\n            Login\n          </a>\n        </li>\n      {:else}\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link\"\n            href=\"/profile\"\n            on:click={(e) => handleNavigation(e, '/profile')}>\n            Profile\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link\"\n            href=\"/issues\"\n            on:click={(e) => handleNavigation(e, '/issues')}>\n            Issues\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link\"\n            href=\"/templates\"\n            on:click={(e) => handleNavigation(e, '/templates')}>\n            Templates\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link\"\n            href=\"/timeentries\"\n            on:click={(e) => handleNavigation(e, '/timeentries')}>\n            Time Entries\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link\"\n            href=\"/report\"\n            on:click={(e) => handleNavigation(e, '/report')}>\n            Report\n          </a>\n        </li>\n      {/if}\n    </ul>\n  </div>\n</nav>\n","<script lang=\"ts\">import { user } from \"../stores/userstore\";\r\n</script>\n\n<div class=\"jumbotron\">\n  <h1 class=\"display-3\">MiniRedmine, Svelte!</h1>\n  {#if $user.unauthorized === true}\n    <p class=\"lead\">\n      Welcome you need to register your user info to use the app.\n    </p>\n  {:else}\n    <p class=\"lead\">Welcome {$user.firstname}.</p>\n  {/if}\n</div>\n","<script lang=\"typescript\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { user } from \"../stores/userstore\";\r\nexport let handleNavigation;\r\nfunction handleSubmit(event) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        event.preventDefault();\r\n        const res = yield fetch(`api/redmine/userinfo?userApiKey=${userApiKey}`);\r\n        user.register(yield res.json());\r\n        handleNavigation(null, \"/\");\r\n    });\r\n}\r\nlet userApiKey;\r\n</script>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <form on:submit={handleSubmit}>\n        <h1 class=\"h3 mb-3 font-weight-normal\">\n          Please input your Redmine Api Key\n        </h1>\n        <label for=\"inputApiKey\" class=\"sr-only\">Api Key</label>\n        <input\n          type=\"text\"\n          id=\"inputApiKey\"\n          class=\"form-control\"\n          placeholder=\"Redmine Api Key\"\n          required\n          bind:value={userApiKey} />\n        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">\n          Login\n        </button>\n      </form>\n    </div>\n  </div>\n</div>\n","<script lang=\"ts\">import { format } from \"date-fns\";\r\nimport { user } from '../stores/userstore';\r\nconst lastLogin = format($user.last_login_on, \"yyyy-MMM-dd HH:mm Z\");\r\n</script>\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div\n        class=\"card card-inverse\">\n        <div class=\"card-block\">\n          <div class=\"row\">\n            <div class=\"col-md-8 col-sm-8\">\n              <h2 class=\"card-title\">\n                Name: {$user.firstname} {$user.lastname}\n              </h2>\n              <p class=\"card-text\">\n                <strong>Login:</strong>\n                {$user.login}\n              </p>\n              <p class=\"card-text\">\n                <strong>Last login:</strong>\n                {lastLogin}\n              </p>\n              <p class=\"card-text\">\n                <strong>Id:</strong>\n                {$user.id}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","const _REDMINE_USER_ISSUES = \"REDMINE_USER_ISSUES\";\r\nimport { writable } from 'svelte/store';\r\nfunction createIssuesStore() {\r\n    var _a;\r\n    const issues = (_a = localStorage.getItem(_REDMINE_USER_ISSUES)) !== null && _a !== void 0 ? _a : '[]';\r\n    const jsonIssues = JSON.parse(issues);\r\n    const { subscribe, set, update } = writable(jsonIssues);\r\n    return {\r\n        subscribe,\r\n        updateIssues: (issues) => update(() => {\r\n            localStorage.setItem(_REDMINE_USER_ISSUES, JSON.stringify(issues));\r\n            return issues;\r\n        })\r\n    };\r\n}\r\nexport const issues = createIssuesStore();\r\n","<script lang=\"typescript\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { issues } from \"../stores/issuestore\";\r\nimport { user } from \"../stores/userstore\";\r\n;\r\nfunction handleSubmit(event) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        event.preventDefault();\r\n        let issueExists = false;\r\n        let tempIssues = Array.from($issues);\r\n        for (let index = 0; index < tempIssues.length; index++) {\r\n            const element = tempIssues[index];\r\n            if (element.id === newIssue) {\r\n                issueExists = true;\r\n            }\r\n        }\r\n        if (issueExists === false) {\r\n            const res = yield fetch(`api/redmine/issue/${newIssue}?userApiKey=${$user.api_key}`);\r\n            tempIssues.push(yield res.json());\r\n            issues.updateIssues(tempIssues);\r\n        }\r\n    });\r\n}\r\nfunction handleRemove(event, id) {\r\n    event.preventDefault();\r\n    let deleteIndex = -1;\r\n    let tempIssues = Array.from($issues);\r\n    for (let index = 0; index < tempIssues.length; index++) {\r\n        const element = tempIssues[index];\r\n        if (element.id === id) {\r\n            deleteIndex = index;\r\n        }\r\n    }\r\n    if (deleteIndex >= 0) {\r\n        tempIssues.splice(deleteIndex, 1);\r\n        issues.updateIssues(tempIssues);\r\n    }\r\n}\r\nlet newIssue = 0;\r\n</script>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-2\">\n      <form on:submit={handleSubmit}>\n        <input\n          type=\"number\"\n          min=\"1\"\n          max=\"9999999\"\n          class=\"form-control\"\n          bind:value={newIssue} />\n        <button type=\"submit\" class=\"btn btn-sm btn-success\">\n          <i class=\"fas fa-plus-circle\" />\n        </button>\n      </form>\n    </div>\n    <div class=\"col-8\">\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>Issue</th>\n            <th>Project</th>\n            <th>Subject</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {#each $issues as issue (issue.id)}\n            <tr>\n              <td>{issue.id}</td>\n              <td>{issue.project.name}</td>\n              <td>{issue.subject}</td>\n              <td>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-sm btn-danger\"\n                  on:click={(e) => handleRemove(e, issue.id)}>\n                  <i class=\"fas fa-trash\" />\n                </button>\n              </td>\n            </tr>\n          {/each}\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n","const _REDMINE_USER_TEMPLATES = \"REDMINE_USER_TEMPLATES\";\r\nimport { writable } from 'svelte/store';\r\nfunction createTemplatesStore() {\r\n    var _a;\r\n    const templates = (_a = localStorage.getItem(_REDMINE_USER_TEMPLATES)) !== null && _a !== void 0 ? _a : '[]';\r\n    const jsonTemplates = JSON.parse(templates);\r\n    const { subscribe, set, update } = writable(jsonTemplates);\r\n    return {\r\n        subscribe,\r\n        updateTemplates: (templates) => update(() => {\r\n            localStorage.setItem(_REDMINE_USER_TEMPLATES, JSON.stringify(templates));\r\n            return templates;\r\n        })\r\n    };\r\n}\r\nexport const templates = createTemplatesStore();\r\n","const _REDMINE_ACTIVITIES = \"REDMINE_ACTIVITIES\";\r\nimport { writable } from 'svelte/store';\r\nfunction createActivtiesStore() {\r\n    var _a;\r\n    const activities = (_a = sessionStorage.getItem(_REDMINE_ACTIVITIES)) !== null && _a !== void 0 ? _a : '[]';\r\n    const jsonActivities = JSON.parse(activities);\r\n    const { subscribe, set, update } = writable(jsonActivities);\r\n    return {\r\n        subscribe,\r\n        updateActivities: (activities) => update(() => {\r\n            sessionStorage.setItem(_REDMINE_ACTIVITIES, JSON.stringify(activities));\r\n            return activities;\r\n        })\r\n    };\r\n}\r\nexport const activities = createActivtiesStore();\r\n","<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { onMount } from \"svelte\";\r\nimport { user } from \"../stores/userstore\";\r\nimport { issues } from \"../stores/issuestore\";\r\nimport { templates } from \"../stores/templatestore\";\r\nimport { activities } from \"../stores/activitystore\";\r\n;\r\nfunction handleSubmit(event) {\r\n    event.preventDefault();\r\n    let tempTemplates = Array.from($templates);\r\n    tempTemplates.push(newtemplate);\r\n    templates.updateTemplates(tempTemplates);\r\n    newtemplate = initTemplate();\r\n}\r\nfunction handleRemove(event, id) {\r\n    event.preventDefault();\r\n    let deleteIndex = -1;\r\n    let tempTemplates = Array.from($templates);\r\n    for (let index = 0; index < tempTemplates.length; index++) {\r\n        const element = tempTemplates[index];\r\n        if (element.id === id) {\r\n            deleteIndex = index;\r\n        }\r\n    }\r\n    if (deleteIndex >= 0) {\r\n        tempTemplates.splice(deleteIndex, 1);\r\n        templates.updateTemplates(tempTemplates);\r\n    }\r\n}\r\nfunction initTemplate() {\r\n    const now = new Date();\r\n    return {\r\n        id: `${now.getFullYear()}${now.getMonth()}${now.getDay()}${now.getHours()}${now.getMinutes()}${now.getSeconds()}${now.getMilliseconds()}`,\r\n        issue: 0,\r\n        activity: 0,\r\n        comments: \"\",\r\n        hours: 0,\r\n    };\r\n}\r\nfunction translateActivity(activity) {\r\n    let result = \"\";\r\n    for (let index = 0; index < $activities.length; index++) {\r\n        const element = $activities[index];\r\n        if (element.id === activity) {\r\n            result = element.name;\r\n            break;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction translateIssue(issue) {\r\n    let result = \"\";\r\n    for (let index = 0; index < $issues.length; index++) {\r\n        const element = $issues[index];\r\n        if (element.id === issue) {\r\n            result = element.subject;\r\n            break;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nlet newtemplate = initTemplate();\r\nonMount(() => __awaiter(void 0, void 0, void 0, function* () {\r\n    if ($user.unauthorized === undefined && $activities.length === 0) {\r\n        const res = yield fetch(`api/redmine/timeentryactivities?userApiKey=${$user.api_key}`);\r\n        const tempActivities = yield res.json();\r\n        activities.updateActivities(tempActivities);\r\n    }\r\n}));\r\n</script>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <form on:submit={handleSubmit}>\n        <div class=\"form-group\">\n          <label for=\"Issue\">Issue</label>\n          <select\n            bind:value={newtemplate.issue}\n            class=\"form-control\"\n            name=\"Issue\">\n            <option value=\"\" selected>--Select an issue--</option>\n            {#each $issues as issue (issue.id)}\n              <option value={issue.id}>{issue.id} - {issue.project.name} - {issue.subject}</option>\n            {/each}\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"Issue\">Activity</label>\n          <select\n            bind:value={newtemplate.activity}\n            class=\"form-control\"\n            name=\"Activity\">\n            <option value=\"\" selected>--Select an activity--</option>\n            {#each $activities as activity (activity.id)}\n              <option value={activity.id}>{activity.name}</option>\n            {/each}\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"Comments\">Comments</label>\n          <input\n            type=\"text\"\n            bind:value={newtemplate.comments}\n            class=\"form-control\"\n            placeholder=\"Comments\" />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"Hours\">Hours</label>\n          <input\n            type=\"number\"\n            min=\"0.0\"\n            max=\"24.0\"\n            step=\"0.5\"\n            bind:value={newtemplate.hours}\n            class=\"form-control\"\n            placeholder=\"Hours\" />\n        </div>\n        <button type=\"submit\" class=\"btn btn-sm btn-success\">\n          <i class=\"fas fa-plus-circle\" />\n        </button>\n      </form>\n    </div>\n    <div class=\"col\">\n      <table class=\"table table-striped\">\n        <caption>\n          <p class=\"text-info\">\n            Total Hours: {$templates.reduce((a, b) => a + b.hours, 0)}\n          </p>\n        </caption>\n        <thead>\n          <tr>\n            <th>Issue</th>\n            <th>Activty</th>\n            <th>Comments</th>\n            <th>Hours</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {#each $templates as template (template.id)}\n            <tr>\n              <td>{translateIssue(template.issue)}</td>\n              <td>{translateActivity(template.activity)}</td>\n              <td>{template.comments}</td>\n              <td>{template.hours}</td>\n              <td>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-sm btn-danger\"\n                  on:click={(e) => handleRemove(e, template.id)}>\n                  <i class=\"fas fa-trash\" />\n                </button>\n              </td>\n            </tr>\n          {/each}\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n","<script lang=\"typescript\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { onMount } from \"svelte\";\r\nimport indexOf from \"lodash/indexOf\";\r\nimport filter from \"lodash/filter\";\r\nimport sortBy from \"lodash/sortBy\";\r\nimport { addDays, format, startOfMonth, endOfMonth } from \"date-fns\";\r\nimport { user } from \"../stores/userstore\";\r\nimport { issues } from \"../stores/issuestore\";\r\nimport { templates } from \"../stores/templatestore\";\r\nimport { activities } from \"../stores/activitystore\";\r\n;\r\n;\r\n;\r\n;\r\n;\r\n;\r\nconst holidays = [\r\n    \"2020-05-25\",\r\n    \"2020-07-04\",\r\n    \"2020-09-07\",\r\n    \"2020-09-16\",\r\n    \"2020-10-12\",\r\n    \"2020-11-11\",\r\n    \"2020-11-26\",\r\n    \"2020-12-25\",\r\n];\r\nlet quincena = [];\r\nlet serverEntries;\r\nlet displayEntries;\r\nlet displayWeekends = false;\r\nlet modalWarning;\r\n$: modalWarning = false;\r\n$: displayEntries = [];\r\nlet modalData;\r\n$: modalData = { turno: {}, entries: [] };\r\nonMount(() => __awaiter(void 0, void 0, void 0, function* () {\r\n    const now = new Date();\r\n    let from;\r\n    let to;\r\n    if (now.getDate() > 15) {\r\n        from = new Date(now.getFullYear(), now.getMonth(), 16);\r\n        to = endOfMonth(now);\r\n    }\r\n    else {\r\n        from = startOfMonth(now);\r\n        to = new Date(now.getFullYear(), now.getMonth(), 15);\r\n    }\r\n    while (from <= to) {\r\n        const turno = {\r\n            fecha: format(from, \"yyyy-MM-dd\"),\r\n            dia: from.getDay(),\r\n            diaSemana: format(from, \"dddd\"),\r\n        };\r\n        from = addDays(from, 1);\r\n        quincena.push(turno);\r\n    }\r\n    //console.log(quincena);\r\n    yield refreshTimeEntries();\r\n}));\r\nfunction refreshTimeEntries(event) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n        if ($user.unauthorized === undefined && quincena.length) {\r\n            const from = quincena[0].fecha;\r\n            const to = quincena[quincena.length - 1].fecha;\r\n            const res = yield fetch(`api/redmine/timeentries?userApiKey=${$user.api_key}&userId=${$user.id}&from=${from}&to=${to}`);\r\n            serverEntries = sortBy(yield res.json(), [\"spent_on\", \"id\"]);\r\n            refreshTable();\r\n        }\r\n    });\r\n}\r\nfunction refreshTable() {\r\n    let tempEntries = [];\r\n    quincena.forEach((diaQuincena) => {\r\n        const entries = filter(serverEntries, {\r\n            spent_on: diaQuincena.fecha,\r\n        });\r\n        if (displayWeekends === true && entries.length === 0) {\r\n            tempEntries.push(addEmptyDay(diaQuincena));\r\n        }\r\n        else if (entries.length === 0 &&\r\n            displayWeekends === false &&\r\n            diaQuincena.dia !== 0 &&\r\n            diaQuincena.dia !== 6) {\r\n            tempEntries.push(addEmptyDay(diaQuincena));\r\n        }\r\n        else if (entries.length) {\r\n            entries.forEach((entry) => {\r\n                let newentry = {\r\n                    id: entry.id,\r\n                    spent_on: entry.spent_on,\r\n                    issueId: entry.issue.id,\r\n                    issue: entry.issue.name,\r\n                    activity: entry.activity.name,\r\n                    comments: entry.comments,\r\n                    hours: entry.hours,\r\n                    jornada: diaQuincena,\r\n                };\r\n                tempEntries.push(newentry);\r\n            });\r\n        }\r\n    });\r\n    displayEntries = tempEntries;\r\n}\r\nfunction handleModalOpen(event, timeEntry) {\r\n    event.preventDefault();\r\n    modalData.turno = timeEntry.jornada;\r\n    const index = indexOf(holidays, modalData.turno.fecha);\r\n    modalWarning =\r\n        modalData.turno.dia === 0 || modalData.turno.dia === 6 || index >= 0;\r\n    if (timeEntry.id > 0 && $templates.length === 0) {\r\n        modalData.entries.push(addEmptyNewEntry(timeEntry.jornada));\r\n    }\r\n    else if ($templates.length > 0 && timeEntry.id < 0) {\r\n        modalData.entries = [];\r\n        $templates.forEach((template) => {\r\n            modalData.entries.push({\r\n                spent_on: timeEntry.jornada.fecha,\r\n                issue: template.issue,\r\n                activity: template.activity,\r\n                comments: template.comments,\r\n                hours: template.hours,\r\n            });\r\n        });\r\n    }\r\n    else {\r\n        modalData.entries.push(addEmptyNewEntry(timeEntry.jornada));\r\n    }\r\n}\r\nfunction handleAddEmptyEntryInModal(event) {\r\n    event.preventDefault();\r\n    let tempEntries = Array.from(modalData.entries);\r\n    tempEntries.push(addEmptyNewEntry(modalData.turno));\r\n    modalData.entries = tempEntries;\r\n}\r\nfunction addEmptyNewEntry(turno) {\r\n    return {\r\n        spent_on: turno.fecha,\r\n        issue: 0,\r\n        activity: 0,\r\n        comments: \"\",\r\n        hours: 0,\r\n    };\r\n}\r\nfunction addEmptyDay(turno) {\r\n    return {\r\n        id: -1,\r\n        spent_on: turno.fecha,\r\n        issueId: 0,\r\n        issue: \"No Hours registered\",\r\n        activity: \"No Hours registered\",\r\n        comments: \"No Hours registered\",\r\n        hours: 0,\r\n        jornada: turno,\r\n    };\r\n}\r\nfunction handleModalSave() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        let tempServerEntries = Array.from(serverEntries);\r\n        yield asyncForEach(modalData.entries, (element) => __awaiter(this, void 0, void 0, function* () {\r\n            const res = yield fetch(`api/redmine/timeentries?userApiKey=${$user.api_key}`, {\r\n                method: \"POST\",\r\n                body: JSON.stringify(element),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            });\r\n            if (res.ok === true) {\r\n                tempServerEntries.push(yield res.json());\r\n            }\r\n        }));\r\n        serverEntries = sortBy(tempServerEntries, [\"spent_on\", \"id\"]);\r\n        modalData = { turno: {}, entries: [] };\r\n        refreshTable();\r\n    });\r\n}\r\nfunction handleModalClose() {\r\n    modalData = { turno: {}, entries: new Array() };\r\n}\r\nfunction asyncForEach(array, callback) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        for (let index = 0; index < array.length; index++) {\r\n            yield callback(array[index], index, array);\r\n        }\r\n    });\r\n}\r\nfunction removeModalEntry(event, index) {\r\n    event.preventDefault();\r\n    let tempEntries = Array.from(modalData.entries);\r\n    if (tempEntries.length > 1) {\r\n        tempEntries.splice(index, 1);\r\n        modalData.entries = tempEntries;\r\n    }\r\n}\r\n</script>\n\n<style>\n  td {\n    color: black;\n    text-shadow: 1px 1px lightgrey;\n  }\n  tr.monday {\n    background-color: lightgoldenrodyellow;\n  }\n  tr.tuesday {\n    background-color: lightpink;\n  }\n  tr.wednesday {\n    background-color: lightseagreen;\n  }\n  tr.thursday {\n    background-color: lightsalmon;\n  }\n  tr.friday {\n    background-color: lightsteelblue;\n  }\n  tr.saturday {\n    background-color: wheat;\n  }\n  tr.sunday {\n    background-color: coral;\n  }\n</style>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <table class=\"table table-sm table-hover\">\n        <thead class=\"thead-dark\">\n          <tr>\n            <th>Date</th>\n            <th>Activity</th>\n            <th>Comments</th>\n            <th>Hours</th>\n            <th>\n              <div class=\"form-group form-check\">\n                <input\n                  type=\"checkbox\"\n                  class=\"form-check-input\"\n                  id=\"displayWeekends\"\n                  bind:checked={displayWeekends}\n                  on:change={refreshTable} />\n                <label class=\"form-check-label\" for=\"displayWeekends\">\n                  Display Weekends\n                </label>\n              </div>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {#each displayEntries as timeEntry}\n            <tr class={timeEntry.jornada.diaSemana.toLowerCase()}>\n              <td>{timeEntry.spent_on} {timeEntry.jornada.diaSemana}</td>\n              <td>{timeEntry.activity}</td>\n              <td>{timeEntry.comments}</td>\n              <td>{timeEntry.hours}</td>\n              <td>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-sm {timeEntry.id < 0 ? 'btn-success' : 'btn-primary'}\"\n                  data-toggle=\"modal\"\n                  data-target=\"#timeEntriesForm\"\n                  on:click={(e) => handleModalOpen(e, timeEntry)}>\n                  <i class=\"fas fa-calendar-plus\" />\n                </button>\n              </td>\n            </tr>\n          {/each}\n        </tbody>\n      </table>\n    </div>\n  </div>\n  <!-- Modal -->\n  <div\n    class=\"modal fade\"\n    id=\"timeEntriesForm\"\n    tabindex={-1}\n    role=\"dialog\"\n    aria-labelledby=\"timeEntriesFormTitle\"\n    aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header {modalWarning ? 'bg-warning' : ''}\">\n          <h5 class=\"modal-title\" id=\"timeEntriesFormTitle\">\n            Register Time Entries for {modalData.turno.diaSemana}\n            {modalData.turno.fecha}\n          </h5>\n          <button\n            type=\"button\"\n            class=\"close\"\n            data-dismiss=\"modal\"\n            aria-label=\"Close\"\n            on:click={handleModalClose}>\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <table>\n            <caption>\n              <button\n                type=\"button\"\n                class=\"btn btn-sm btn-info\"\n                on:click={(e) => handleAddEmptyEntryInModal(e)}>\n                <i class=\"fas fa-calendar-plus\" /> Add empty entry\n              </button>\n            </caption>\n            <thead>\n              <tr>\n                <th>Issue</th>\n                <th>Activity</th>\n                <th>Comments</th>\n                <th>Hours</th>\n                <th />\n              </tr>\n            </thead>\n            <tbody>\n              {#each modalData.entries as entry, index}\n                <tr>\n                  <td>\n                    <select\n                      bind:value={entry.issue}\n                      class=\"form-control\"\n                      name=\"Issue\">\n                      <option value=\"\" selected>--Select an issue--</option>\n                      {#each $issues as issue (issue.id)}\n                        <option value={issue.id}>\n                          {issue.id}\n                          {issue.project.name}\n                        </option>\n                      {/each}\n                    </select>\n                  </td>\n                  <td>\n                    <select\n                      bind:value={entry.activity}\n                      class=\"form-control\"\n                      name=\"Activity\">\n                      <option value=\"\" selected>--Select an activity--</option>\n                      {#each $activities as activity (activity.id)}\n                        <option value={activity.id}>{activity.name}</option>\n                      {/each}\n                    </select>\n                  </td>\n                  <td>\n                    <input\n                      type=\"text\"\n                      bind:value={entry.comments}\n                      class=\"form-control\"\n                      placeholder=\"Comments\" />\n                  </td>\n                  <td>\n                    <input\n                      type=\"number\"\n                      min=\"0.0\"\n                      max=\"24.0\"\n                      step=\"0.5\"\n                      bind:value={entry.hours}\n                      class=\"form-control\"\n                      placeholder=\"Hours\" />\n                  </td>\n                  <td>\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-sm btn-danger\"\n                      on:click={(e) => removeModalEntry(e, index)}>\n                      <i class=\"fas fa-trash\" />\n                    </button>\n                  </td>\n                </tr>\n              {/each}\n            </tbody>\n          </table>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            data-dismiss=\"modal\"\n            on:click={handleModalClose}>\n            Close\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            data-dismiss=\"modal\"\n            on:click={async () => await handleModalSave()}>\n            Submit Time Entries\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","<script lang=\"typescript\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { onMount } from \"svelte\";\r\nimport filter from \"lodash/filter\";\r\nimport sumBy from \"lodash/sumBy\";\r\nimport sortBy from \"lodash/sortBy\";\r\nimport { addDays, format, startOfMonth, endOfMonth } from \"date-fns\";\r\nimport { user } from \"../stores/userstore\";\r\nimport { issues } from \"../stores/issuestore\";\r\n;\r\n;\r\n;\r\nlet quincena = [];\r\nlet serverEntries;\r\nlet totalHours = $issues;\r\n$: serverEntries = [];\r\nonMount(() => __awaiter(void 0, void 0, void 0, function* () {\r\n    const now = new Date();\r\n    let from;\r\n    let to;\r\n    if (now.getDate() > 15) {\r\n        from = new Date(now.getFullYear(), now.getMonth(), 16);\r\n        to = endOfMonth(now);\r\n    }\r\n    else {\r\n        from = startOfMonth(now);\r\n        to = new Date(now.getFullYear(), now.getMonth(), 15);\r\n    }\r\n    while (from <= to) {\r\n        const turno = {\r\n            fecha: format(from, \"yyyy-MM-dd\"),\r\n            dia: from.getDay(),\r\n            diaSemana: format(from, \"dddd\"),\r\n        };\r\n        from = addDays(from, 1);\r\n        quincena.push(turno);\r\n    }\r\n    let tempServerEntries = yield refreshTimeEntries();\r\n    calculateTotalHoursPerIssue(tempServerEntries);\r\n    serverEntries = tempServerEntries;\r\n}));\r\nfunction refreshTimeEntries(event) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        let result = [];\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n        if ($user.unauthorized === undefined && quincena.length) {\r\n            const from = quincena[0].fecha;\r\n            const to = quincena[quincena.length - 1].fecha;\r\n            const res = yield fetch(`api/redmine/timeentries?userApiKey=${$user.api_key}&userId=${$user.id}&from=${from}&to=${to}`);\r\n            result = sortBy(yield res.json(), [\"spent_on\", \"id\"]);\r\n        }\r\n        return result;\r\n    });\r\n}\r\nfunction calculateTotalHoursPerIssue(tempServerEntries) {\r\n    let tempIssues = totalHours;\r\n    for (let index = 0; index < tempIssues.length; index++) {\r\n        const issueEntries = filter(tempServerEntries, (o) => o.issue.id === tempIssues[index].id);\r\n        tempIssues[index].spent_hours = sumBy(issueEntries, \"hours\");\r\n    }\r\n    totalHours = tempIssues;\r\n}\r\n</script>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      {#each totalHours as issue (issue.id)}\n        <h5>Total de horas para {issue.project.name} : {issue.spent_hours}</h5>\n      {/each}\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col\">\n      <table class=\"table table-sm table-hover\">\n        <thead class=\"thead-dark\">\n          <tr>\n            <th>Date</th>\n            <th>Activity</th>\n            <th>Comments</th>\n            <th>Hours</th>\n          </tr>\n        </thead>\n        <tbody>\n          {#each serverEntries as timeEntry}\n            <tr>\n              <td>{timeEntry.spent_on}</td>\n              <td>{timeEntry.activity.name}</td>\n              <td>{timeEntry.comments}</td>\n              <td>{timeEntry.hours}</td>\n            </tr>\n          {/each}\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n","<script lang=\"typescript\">import { onMount } from \"svelte\";\r\nimport Header from \"./components/Header.svelte\";\r\nimport Index from \"./pages/Index.svelte\";\r\nimport Login from \"./pages/Login.svelte\";\r\nimport Profile from \"./pages/Profile.svelte\";\r\nimport Issues from \"./pages/Issues.svelte\";\r\nimport Templates from \"./pages/Templates.svelte\";\r\nimport TimeEntries from \"./pages/TimeEntries.svelte\";\r\nimport Report from \"./pages/Report.svelte\";\r\nimport { user } from \"./stores/userstore\";\r\nfunction routeHandler(event, route) {\r\n    event ? event.preventDefault() : () => { };\r\n    window.history.replaceState(null, routeTranslator(route), route);\r\n    currentRoute = route;\r\n}\r\nfunction routeTranslator(route) {\r\n    let result;\r\n    switch (route) {\r\n        case \"/login\":\r\n            result = \"Login\";\r\n            break;\r\n        case \"/profile\":\r\n            result = \"Profile\";\r\n            break;\r\n        case \"/issues\":\r\n            result = \"Issues\";\r\n            break;\r\n        case \"/templates\":\r\n            result = \"Templates\";\r\n            break;\r\n        case \"/timeentries\":\r\n            result = \"Time Entries\";\r\n            break;\r\n        case \"/report\":\r\n            result = \"Time Card\";\r\n            break;\r\n        default:\r\n            result = \"Index\";\r\n            break;\r\n    }\r\n    return result;\r\n}\r\nlet currentRoute;\r\n$: currentRoute = \"/\";\r\nonMount(() => {\r\n    routeHandler(null, window.location.pathname);\r\n});\r\n</script>\n\n<Header handleNavigation={routeHandler} />\n{#if currentRoute === '/'}\n  <Index />\n{:else if currentRoute === '/login' && $user.unauthorized === true}\n  <Login handleNavigation={routeHandler} />\n{:else if currentRoute === '/profile' && $user.unauthorized === undefined}\n  <Profile />\n{:else if currentRoute === '/issues' && $user.unauthorized === undefined}\n  <Issues />\n{:else if currentRoute === '/templates' && $user.unauthorized === undefined}\n  <Templates />\n{:else if currentRoute === '/timeentries' && $user.unauthorized === undefined}\n  <TimeEntries />\n{:else if currentRoute === '/report' && $user.unauthorized === undefined}\n  <Report />\n{:else}\n  <Index />\n{/if}\n","import App from './App.svelte';\r\nconst app = new App({\r\n    target: document.body\r\n});\r\nwindow = Object.assign(window, { app: app });\r\nexport default app;\r\n"],"sourceRoot":""}