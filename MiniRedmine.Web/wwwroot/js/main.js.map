{"version":3,"sources":["webpack://miniredmine-spa/./src/stores/userstore.ts","webpack://miniredmine-spa/./src/components/Header.svelte","webpack://miniredmine-spa/./src/pages/Index.svelte","webpack://miniredmine-spa/./src/pages/Login.svelte","webpack://miniredmine-spa/./src/pages/Profile.svelte","webpack://miniredmine-spa/./src/stores/issuestore.ts","webpack://miniredmine-spa/./src/pages/Issues.svelte","webpack://miniredmine-spa/./src/stores/templatestore.ts","webpack://miniredmine-spa/./src/stores/activitystore.ts","webpack://miniredmine-spa/./src/pages/Templates.svelte","webpack://miniredmine-spa/./src/stores/teammemberstore.ts","webpack://miniredmine-spa/./src/pages/TeamMembers.svelte","webpack://miniredmine-spa/./src/pages/TimeEntries.svelte","webpack://miniredmine-spa/./src/pages/Report.svelte","webpack://miniredmine-spa/./src/pages/TLEReport.svelte","webpack://miniredmine-spa/./src/App.svelte","webpack://miniredmine-spa/./src/main.ts"],"names":["_REDMINE_USER","user","_a","localStorage","getItem","JSON","stringify","unauthorized","jsonUser","parse","subscribe","set","update","register","currentUser","setItem","createUserStore","handleNavigation","isLead","e","firstname","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","apply","userApiKey","event","preventDefault","res","fetch","headers","json","lastname","login","id","lastLogin","format","parseISO","$user","last_login_on","_REDMINE_USER_ISSUES","issues","jsonIssues","updateIssues","createIssuesStore","project","name","subject","handleRemove","deleteIndex","tempIssues","Array","from","$issues","index","length","splice","newIssue","issueExists","api_key","ok","push","issue","_REDMINE_USER_TEMPLATES","templates","jsonTemplates","updateTemplates","createTemplatesStore","_REDMINE_ACTIVITIES","activities","sessionStorage","jsonActivities","updateActivities","createActivtiesStore","activity","comments","hours","reduce","initTemplate","now","Date","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","getMilliseconds","a","b","tempTemplates","$templates","newtemplate","undefined","$activities","tempActivities","element","template","_REDMINE_TEAM_MEMBERS","teamMembers","jsonMembers","updateMembers","createTeamMemberStore","newTeamMember","tempMembers","$teamMembers","indexOf","i","spent_on","jornada","diaSemana","toLowerCase","turno","fecha","entries","addEmptyNewEntry","addEmptyDay","issueId","holidays","serverEntries","displayEntries","modalWarning","modalData","quincena","displayWeekends","refreshTable","tempEntries","forEach","diaQuincena","dia","entry","newentry","handleModalOpen","timeEntry","handleAddEmptyEntryInModal","handleModalSave","tempServerEntries","array","callback","asyncForEach","method","body","document","getElementById","setAttribute","removeModalEntry","to","getDate","refreshTimeEntries","spent_hours","totalHours","issueEntries","o","calculateTotalHoursPerIssue","memberHours","teamEntriesReport","payload","FormData","append","m","toString","routeHandler","route","window","history","replaceState","routeTranslator","currentRoute","leadIds","location","pathname","text","find","target"],"mappings":"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","file":"js/main.js?t=40d20dcc","sourcesContent":["import { writable } from 'svelte/store';\r\nconst _REDMINE_USER = \"REDMINE_USER\";\r\nfunction createUserStore() {\r\n    var _a;\r\n    const user = (_a = localStorage.getItem(_REDMINE_USER)) !== null && _a !== void 0 ? _a : JSON.stringify({ unauthorized: true });\r\n    const jsonUser = JSON.parse(user);\r\n    const { subscribe, set, update } = writable(jsonUser);\r\n    return {\r\n        subscribe,\r\n        register: (currentUser) => update(() => {\r\n            localStorage.setItem(_REDMINE_USER, JSON.stringify(currentUser));\r\n            return currentUser;\r\n        })\r\n    };\r\n}\r\nexport const user = createUserStore();\r\n","<script lang=\"typescript\">import { user } from \"../stores/userstore\";\r\nexport let handleNavigation;\r\nexport let isLead;\r\n</script>\n\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary mb-3\">\n  <a class=\"navbar-brand\" href=\"/\" on:click={(e) => handleNavigation(e, \"/\")}>\n    Mini Redmine 2\n  </a>\n  <button class=\"navbar-toggler\"  type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#mainnavbar\" aria-controls=\"mainnavbar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\" />\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"mainnavbar\">\n    <ul class=\"navbar-nav mr-auto\">\n      {#if $user.unauthorized === true}\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link\"\n            href=\"/login\"\n            on:click={(e) => handleNavigation(e, \"/login\")}\n          >\n            Login\n          </a>\n        </li>\n      {:else}\n        <li class=\"nav-item dropdown\">\n          <a\n            class=\"nav-link dropdown-toggle\"\n            id=\"navbarUser\"\n            role=\"button\"\n            data-bs-toggle=\"dropdown\"\n            aria-expanded=\"false\"\n          >\n            User Menu\n          </a>\n          <ul class=\"dropdown-menu\" aria-labelledby=\"navbarUser\">\n            <li>\n              <a\n                class=\"dropdown-item\"\n                href=\"/user/profile\"\n                on:click={(e) => handleNavigation(e, \"/user/profile\")}\n                >Profile</a\n              >\n            </li>\n            <li>\n              <a\n                class=\"dropdown-item\"\n                href=\"/user/issues\"\n                on:click={(e) => handleNavigation(e, \"/user/issues\")}>Issues</a\n              >\n            </li>\n            <li>\n              <a\n                class=\"dropdown-item\"\n                href=\"/user/templates\"\n                on:click={(e) => handleNavigation(e, \"/user/templates\")}\n                >Templates</a\n              >\n            </li>\n            {#if isLead === true}\n            <li>\n              <a\n                class=\"dropdown-item\"\n                href=\"/tle/teammembers\"\n                on:click={(e) => handleNavigation(e, \"/tle/teammembers\")}\n                >Team Members</a\n              >\n            </li>       \n            {/if}\n          </ul>\n        </li>\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link\"\n            href=\"/user/timeentries\"\n            on:click={(e) => handleNavigation(e, \"/user/timeentries\")}\n          >\n            Time Entries\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link\"\n            href=\"/user/report\"\n            on:click={(e) => handleNavigation(e, \"/user/report\")}\n          >\n            Report\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link\"\n            href=\"/tle/report\"\n            on:click={(e) => handleNavigation(e, \"/tle/report\")}\n          >\n            TLE Report\n          </a>\n        </li>\n      {/if}\n    </ul>\n  </div>\n</nav>\n","<script lang=\"ts\">import { user } from \"../stores/userstore\";\r\n</script>\n\n<div class=\"jumbotron\">\n  <h1 class=\"display-3\">MiniRedmine, Svelte!</h1>\n  {#if $user.unauthorized === true}\n    <p class=\"lead\">\n      Welcome you need to register your user info to use the app.\n    </p>\n  {:else}\n    <p class=\"lead\">Welcome {$user.firstname}.</p>\n  {/if}\n</div>\n","<script lang=\"typescript\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { user } from \"../stores/userstore\";\r\nexport let handleNavigation;\r\nfunction handleSubmit(event) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        event.preventDefault();\r\n        const res = yield fetch('/api/redmine/userinfo', {\r\n            headers: {\r\n                'Redmine-Key': `${userApiKey}`\r\n            }\r\n        });\r\n        user.register(yield res.json());\r\n        handleNavigation(null, \"/\");\r\n    });\r\n}\r\nlet userApiKey;\r\n</script>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <form on:submit={handleSubmit}>\n        <h1 class=\"h3 mb-3 font-weight-normal\">\n          Please input your Redmine Api Key\n        </h1>\n        <label for=\"inputApiKey\" class=\"sr-only\">Api Key</label>\n        <input\n          type=\"text\"\n          id=\"inputApiKey\"\n          class=\"form-control\"\n          placeholder=\"Redmine Api Key\"\n          required\n          bind:value={userApiKey} />\n        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">\n          Login\n        </button>\n      </form>\n    </div>\n  </div>\n</div>\n","<script lang=\"ts\">import { format, parseISO } from \"date-fns\";\r\nimport { user } from '../stores/userstore';\r\nconst lastLogin = format(parseISO($user.last_login_on), \"yyyy-MMM-dd HH:mm\");\r\n</script>\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div\n        class=\"card card-inverse\">\n        <div class=\"card-block\">\n          <div class=\"row\">\n            <div class=\"col-md-8 col-sm-8\">\n              <h2 class=\"card-title\">\n                Name: {$user.firstname} {$user.lastname}\n              </h2>\n              <p class=\"card-text\">\n                <strong>Login:</strong>\n                {$user.login}\n              </p>\n              <p class=\"card-text\">\n                <strong>Last login:</strong>\n                {lastLogin}\n              </p>\n              <p class=\"card-text\">\n                <strong>Id:</strong>\n                {$user.id}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { writable } from 'svelte/store';\r\nconst _REDMINE_USER_ISSUES = \"REDMINE_USER_ISSUES\";\r\nfunction createIssuesStore() {\r\n    var _a;\r\n    const issues = (_a = localStorage.getItem(_REDMINE_USER_ISSUES)) !== null && _a !== void 0 ? _a : '[]';\r\n    const jsonIssues = JSON.parse(issues);\r\n    const { subscribe, set, update } = writable(jsonIssues);\r\n    return {\r\n        subscribe,\r\n        updateIssues: (issues) => update(() => {\r\n            localStorage.setItem(_REDMINE_USER_ISSUES, JSON.stringify(issues));\r\n            return issues;\r\n        })\r\n    };\r\n}\r\nexport const issues = createIssuesStore();\r\n","<script lang=\"typescript\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { issues } from \"../stores/issuestore\";\r\nimport { user } from \"../stores/userstore\";\r\n;\r\nfunction handleSubmit(event) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        event.preventDefault();\r\n        let issueExists = false;\r\n        let tempIssues = Array.from($issues);\r\n        for (let index = 0; index < tempIssues.length; index++) {\r\n            const element = tempIssues[index];\r\n            if (element.id === newIssue) {\r\n                issueExists = true;\r\n            }\r\n        }\r\n        if (issueExists === false) {\r\n            const res = yield fetch(`/api/redmine/issue/${newIssue}`, {\r\n                headers: {\r\n                    \"Redmine-Key\": `${$user.api_key}`,\r\n                }\r\n            });\r\n            if (res.ok === true) {\r\n                tempIssues.push(yield res.json());\r\n                issues.updateIssues(tempIssues);\r\n            }\r\n        }\r\n    });\r\n}\r\nfunction handleRemove(event, id) {\r\n    event.preventDefault();\r\n    let deleteIndex = -1;\r\n    let tempIssues = Array.from($issues);\r\n    for (let index = 0; index < tempIssues.length; index++) {\r\n        const element = tempIssues[index];\r\n        if (element.id === id) {\r\n            deleteIndex = index;\r\n        }\r\n    }\r\n    if (deleteIndex >= 0) {\r\n        tempIssues.splice(deleteIndex, 1);\r\n        issues.updateIssues(tempIssues);\r\n    }\r\n}\r\nlet newIssue = 0;\r\n</script>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-2\">\n      <form on:submit={handleSubmit}>\n        <input\n          type=\"number\"\n          min=\"1\"\n          max=\"9999999\"\n          class=\"form-control\"\n          bind:value={newIssue}\n        />\n        <button type=\"submit\" class=\"btn btn-sm btn-success\">\n          <i class=\"fas fa-plus-circle\" />\n        </button>\n      </form>\n    </div>\n    <div class=\"col-8\">\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>Issue</th>\n            <th>Project</th>\n            <th>Subject</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {#each $issues as issue (issue.id)}\n            <tr>\n              <td>{issue.id}</td>\n              <td>{issue.project.name}</td>\n              <td>{issue.subject}</td>\n              <td>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-sm btn-danger\"\n                  on:click={(e) => handleRemove(e, issue.id)}\n                >\n                  <i class=\"fas fa-trash\" />\n                </button>\n              </td>\n            </tr>\n          {/each}\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n","import { writable } from 'svelte/store';\r\nconst _REDMINE_USER_TEMPLATES = \"REDMINE_USER_TEMPLATES\";\r\nfunction createTemplatesStore() {\r\n    var _a;\r\n    const templates = (_a = localStorage.getItem(_REDMINE_USER_TEMPLATES)) !== null && _a !== void 0 ? _a : '[]';\r\n    const jsonTemplates = JSON.parse(templates);\r\n    const { subscribe, set, update } = writable(jsonTemplates);\r\n    return {\r\n        subscribe,\r\n        updateTemplates: (templates) => update(() => {\r\n            localStorage.setItem(_REDMINE_USER_TEMPLATES, JSON.stringify(templates));\r\n            return templates;\r\n        })\r\n    };\r\n}\r\nexport const templates = createTemplatesStore();\r\n","import { writable } from 'svelte/store';\r\nconst _REDMINE_ACTIVITIES = \"REDMINE_ACTIVITIES\";\r\nfunction createActivtiesStore() {\r\n    var _a;\r\n    const activities = (_a = sessionStorage.getItem(_REDMINE_ACTIVITIES)) !== null && _a !== void 0 ? _a : '[]';\r\n    const jsonActivities = JSON.parse(activities);\r\n    const { subscribe, set, update } = writable(jsonActivities);\r\n    return {\r\n        subscribe,\r\n        updateActivities: (activities) => update(() => {\r\n            sessionStorage.setItem(_REDMINE_ACTIVITIES, JSON.stringify(activities));\r\n            return activities;\r\n        })\r\n    };\r\n}\r\nexport const activities = createActivtiesStore();\r\n","<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { onMount } from \"svelte\";\r\nimport { user } from \"../stores/userstore\";\r\nimport { issues } from \"../stores/issuestore\";\r\nimport { templates } from \"../stores/templatestore\";\r\nimport { activities } from \"../stores/activitystore\";\r\n;\r\nfunction handleSubmit(event) {\r\n    event.preventDefault();\r\n    let tempTemplates = Array.from($templates);\r\n    tempTemplates.push(newtemplate);\r\n    templates.updateTemplates(tempTemplates);\r\n    newtemplate = initTemplate();\r\n}\r\nfunction handleRemove(event, id) {\r\n    event.preventDefault();\r\n    let deleteIndex = -1;\r\n    let tempTemplates = Array.from($templates);\r\n    for (let index = 0; index < tempTemplates.length; index++) {\r\n        const element = tempTemplates[index];\r\n        if (element.id === id) {\r\n            deleteIndex = index;\r\n        }\r\n    }\r\n    if (deleteIndex >= 0) {\r\n        tempTemplates.splice(deleteIndex, 1);\r\n        templates.updateTemplates(tempTemplates);\r\n    }\r\n}\r\nfunction initTemplate() {\r\n    const now = new Date();\r\n    return {\r\n        id: `${now.getFullYear()}${now.getMonth()}${now.getDay()}${now.getHours()}${now.getMinutes()}${now.getSeconds()}${now.getMilliseconds()}`,\r\n        issue: 0,\r\n        activity: 0,\r\n        comments: \"\",\r\n        hours: 0,\r\n    };\r\n}\r\nfunction translateActivity(activity) {\r\n    let result = \"\";\r\n    for (let index = 0; index < $activities.length; index++) {\r\n        const element = $activities[index];\r\n        if (element.id === activity) {\r\n            result = element.name;\r\n            break;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction translateIssue(issue) {\r\n    let result = \"\";\r\n    for (let index = 0; index < $issues.length; index++) {\r\n        const element = $issues[index];\r\n        if (element.id === issue) {\r\n            result = element.subject;\r\n            break;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nlet newtemplate = initTemplate();\r\nonMount(() => __awaiter(void 0, void 0, void 0, function* () {\r\n    if ($user.unauthorized === undefined && $activities.length === 0) {\r\n        const res = yield fetch(`/api/redmine/timeentryactivities`, {\r\n            headers: {\r\n                \"Redmine-Key\": `${$user.api_key}`,\r\n            },\r\n        });\r\n        const tempActivities = yield res.json();\r\n        activities.updateActivities(tempActivities);\r\n    }\r\n}));\r\n</script>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <form on:submit={handleSubmit}>\n        <div class=\"form-group\">\n          <label for=\"Issue\">Issue</label>\n          <select\n            bind:value={newtemplate.issue}\n            class=\"form-control\"\n            name=\"Issue\"\n          >\n            <option value=\"\" selected>--Select an issue--</option>\n            {#each $issues as issue (issue.id)}\n              <option value={issue.id}\n                >{issue.id} - {issue.project.name} - {issue.subject}</option\n              >\n            {/each}\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"Issue\">Activity</label>\n          <select\n            bind:value={newtemplate.activity}\n            class=\"form-control\"\n            name=\"Activity\"\n          >\n            <option value=\"\" selected>--Select an activity--</option>\n            {#each $activities as activity (activity.id)}\n              <option value={activity.id}>{activity.name}</option>\n            {/each}\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"Comments\">Comments</label>\n          <input\n            type=\"text\"\n            bind:value={newtemplate.comments}\n            class=\"form-control\"\n            placeholder=\"Comments\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"Hours\">Hours</label>\n          <input\n            type=\"number\"\n            min=\"0.0\"\n            max=\"24.0\"\n            step=\"0.5\"\n            bind:value={newtemplate.hours}\n            class=\"form-control\"\n            placeholder=\"Hours\"\n          />\n        </div>\n        <button type=\"submit\" class=\"btn btn-sm btn-success\">\n          <i class=\"fas fa-plus-circle\" />\n        </button>\n      </form>\n    </div>\n    <div class=\"col\">\n      <table class=\"table table-striped\">\n        <caption>\n          <p class=\"text-info\">\n            Total Hours: {$templates.reduce((a, b) => a + b.hours, 0)}\n          </p>\n        </caption>\n        <thead>\n          <tr>\n            <th>Issue</th>\n            <th>Activty</th>\n            <th>Comments</th>\n            <th>Hours</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {#each $templates as template (template.id)}\n            <tr>\n              <td>{translateIssue(template.issue)}</td>\n              <td>{translateActivity(template.activity)}</td>\n              <td>{template.comments}</td>\n              <td>{template.hours}</td>\n              <td>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-sm btn-danger\"\n                  on:click={(e) => handleRemove(e, template.id)}\n                >\n                  <i class=\"fas fa-trash\" />\n                </button>\n              </td>\n            </tr>\n          {/each}\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n","import { writable } from 'svelte/store';\r\nconst _REDMINE_TEAM_MEMBERS = \"REDMINE_TEAM_MEMBERS\";\r\nfunction createTeamMemberStore() {\r\n    var _a;\r\n    const teamMembers = (_a = localStorage.getItem(_REDMINE_TEAM_MEMBERS)) !== null && _a !== void 0 ? _a : '[]';\r\n    const jsonMembers = JSON.parse(teamMembers);\r\n    const { subscribe, set, update } = writable(jsonMembers);\r\n    return {\r\n        subscribe,\r\n        updateMembers: (teamMembers) => update(() => {\r\n            localStorage.setItem(_REDMINE_TEAM_MEMBERS, JSON.stringify(teamMembers));\r\n            return teamMembers;\r\n        })\r\n    };\r\n}\r\nexport const teamMembers = createTeamMemberStore();\r\n","<script lang=\"typescript\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { teamMembers } from \"../stores/teammemberstore\";\r\nlet newTeamMember = 0;\r\nfunction handleSubmit(event) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        event.preventDefault();\r\n        let memberExists = false;\r\n        let tempMembers = Array.from($teamMembers);\r\n        let index = tempMembers.indexOf(newTeamMember);\r\n        if (index >= 0) {\r\n            newTeamMember = 0;\r\n        }\r\n        else {\r\n            tempMembers.push(newTeamMember);\r\n            newTeamMember = 0;\r\n            teamMembers.updateMembers(tempMembers);\r\n        }\r\n    });\r\n}\r\nfunction handleRemove(event, index) {\r\n    event.preventDefault();\r\n    let tempMembers = Array.from($teamMembers);\r\n    tempMembers.splice(index, 1);\r\n    teamMembers.updateMembers(tempMembers);\r\n}\r\n</script>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-4\">\n      <form on:submit={handleSubmit}>\n        <input\n          type=\"number\"\n          min=\"1\"\n          max=\"9999999\"\n          step=\"1\"\n          class=\"form-control\"\n          bind:value={newTeamMember} />\n        <button type=\"submit\" class=\"btn btn-sm btn-success\">\n          <i class=\"fas fa-plus-circle\" />\n        </button>\n      </form>\n    </div>\n    <div class=\"col\">\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>Member Id</th>            \n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {#each $teamMembers as member,i }\n            <tr>\n              <td>{member}</td>\n              <td>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-sm btn-danger\"\n                  on:click={(e) => handleRemove(e, i)}>\n                  <i class=\"fas fa-trash\" />\n                </button>\n              </td>\n            </tr>\n          {/each}\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n\n","<script lang=\"typescript\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { onMount } from \"svelte\";\r\nimport indexOf from \"lodash/indexOf\";\r\nimport filter from \"lodash/filter\";\r\nimport sortBy from \"lodash/sortBy\";\r\nimport addDays from \"date-fns/addDays\";\r\nimport format from \"date-fns/format\";\r\nimport startOfMonth from \"date-fns/startOfMonth\";\r\nimport endOfMonth from \"date-fns/endOfMonth\";\r\nimport { user } from \"../stores/userstore\";\r\nimport { issues } from \"../stores/issuestore\";\r\nimport { templates } from \"../stores/templatestore\";\r\nimport { activities } from \"../stores/activitystore\";\r\n;\r\n;\r\n;\r\n;\r\n;\r\n;\r\nconst holidays = [\r\n    \"2021-01-01\",\r\n    \"2021-01-18\",\r\n    \"2021-02-15\",\r\n    \"2021-05-31\",\r\n    \"2021-07-04\",\r\n    \"2021-09-06\",\r\n    \"2021-09-16\",\r\n    \"2021-10-11\",\r\n    \"2021-11-11\",\r\n    \"2021-11-25\",\r\n    \"2021-12-25\",\r\n    \"2022-01-01\",\r\n];\r\nlet quincena = [];\r\nlet serverEntries;\r\nlet displayEntries;\r\nlet displayWeekends = false;\r\nlet modalWarning;\r\n$: modalWarning = false;\r\n$: displayEntries = [];\r\nlet modalData;\r\n$: modalData = { turno: {}, entries: [] };\r\nonMount(() => __awaiter(void 0, void 0, void 0, function* () {\r\n    const now = new Date();\r\n    let from;\r\n    let to;\r\n    if (now.getDate() > 15) {\r\n        from = new Date(now.getFullYear(), now.getMonth(), 16);\r\n        to = endOfMonth(now);\r\n    }\r\n    else {\r\n        from = startOfMonth(now);\r\n        to = new Date(now.getFullYear(), now.getMonth(), 15);\r\n    }\r\n    while (from <= to) {\r\n        const turno = {\r\n            fecha: format(from, \"yyyy-MM-dd\"),\r\n            dia: from.getDay(),\r\n            diaSemana: format(from, \"EEE\"),\r\n        };\r\n        from = addDays(from, 1);\r\n        quincena.push(turno);\r\n    }\r\n    if ($user.unauthorized === undefined && $activities.length === 0) {\r\n        const res = yield fetch(`/api/redmine/timeentryactivities`, {\r\n            headers: {\r\n                \"Redmine-Key\": `${$user.api_key}`,\r\n            },\r\n        });\r\n        const tempActivities = yield res.json();\r\n        activities.updateActivities(tempActivities);\r\n    }\r\n    yield refreshTimeEntries();\r\n}));\r\nfunction refreshTimeEntries(event) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n        if ($user.unauthorized === undefined && quincena.length) {\r\n            const from = quincena[0].fecha;\r\n            const to = quincena[quincena.length - 1].fecha;\r\n            const res = yield fetch(`/api/redmine/timeentries?userId=${$user.id}&from=${from}&to=${to}`, {\r\n                headers: {\r\n                    \"Redmine-Key\": `${$user.api_key}`,\r\n                },\r\n            });\r\n            serverEntries = sortBy(yield res.json(), [\"spent_on\", \"id\"]);\r\n            refreshTable();\r\n        }\r\n    });\r\n}\r\nfunction refreshTable() {\r\n    let tempEntries = [];\r\n    quincena.forEach((diaQuincena) => {\r\n        const entries = filter(serverEntries, {\r\n            spent_on: diaQuincena.fecha,\r\n        });\r\n        if (displayWeekends === true && entries.length === 0) {\r\n            tempEntries.push(addEmptyDay(diaQuincena));\r\n        }\r\n        else if (entries.length === 0 &&\r\n            displayWeekends === false &&\r\n            diaQuincena.dia !== 0 &&\r\n            diaQuincena.dia !== 6) {\r\n            tempEntries.push(addEmptyDay(diaQuincena));\r\n        }\r\n        else if (entries.length) {\r\n            entries.forEach((entry) => {\r\n                let newentry = {\r\n                    id: entry.id,\r\n                    project: entry.project.name,\r\n                    spent_on: entry.spent_on,\r\n                    issueId: entry.issue.id,\r\n                    issue: entry.issue.name,\r\n                    activity: entry.activity.name,\r\n                    comments: entry.comments,\r\n                    hours: entry.hours,\r\n                    jornada: diaQuincena,\r\n                };\r\n                tempEntries.push(newentry);\r\n            });\r\n        }\r\n    });\r\n    displayEntries = tempEntries;\r\n}\r\nfunction handleModalOpen(timeEntry) {\r\n    modalData.turno = timeEntry.jornada;\r\n    const index = indexOf(holidays, modalData.turno.fecha);\r\n    modalWarning =\r\n        modalData.turno.dia === 0 || modalData.turno.dia === 6 || index >= 0;\r\n    if (timeEntry.id > 0 && $templates.length === 0) {\r\n        modalData.entries.push(addEmptyNewEntry(timeEntry.jornada));\r\n    }\r\n    else if ($templates.length > 0 && timeEntry.id < 0) {\r\n        modalData.entries = [];\r\n        $templates.forEach((template) => {\r\n            modalData.entries.push({\r\n                spent_on: timeEntry.jornada.fecha,\r\n                issue: template.issue,\r\n                activity: template.activity,\r\n                comments: template.comments,\r\n                hours: template.hours,\r\n            });\r\n        });\r\n    }\r\n    else {\r\n        modalData.entries.push(addEmptyNewEntry(timeEntry.jornada));\r\n    }\r\n}\r\nfunction handleAddEmptyEntryInModal(event) {\r\n    event.preventDefault();\r\n    let tempEntries = Array.from(modalData.entries);\r\n    tempEntries.push(addEmptyNewEntry(modalData.turno));\r\n    modalData.entries = tempEntries;\r\n}\r\nfunction addEmptyNewEntry(turno) {\r\n    return {\r\n        spent_on: turno.fecha,\r\n        issue: 0,\r\n        activity: 0,\r\n        comments: \"\",\r\n        hours: 0,\r\n    };\r\n}\r\nfunction addEmptyDay(turno) {\r\n    return {\r\n        id: -1,\r\n        spent_on: turno.fecha,\r\n        issueId: 0,\r\n        project: \"\",\r\n        issue: \"No Hours registered\",\r\n        activity: \"No Hours registered\",\r\n        comments: \"No Hours registered\",\r\n        hours: 0,\r\n        jornada: turno,\r\n    };\r\n}\r\nfunction handleModalSave() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        let tempServerEntries = Array.from(serverEntries);\r\n        yield asyncForEach(modalData.entries, (element) => __awaiter(this, void 0, void 0, function* () {\r\n            const res = yield fetch(\"/api/redmine/timeentries\", {\r\n                method: \"POST\",\r\n                body: JSON.stringify(element),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Redmine-Key\": `${$user.api_key}`,\r\n                },\r\n            });\r\n            if (res.ok === true) {\r\n                tempServerEntries.push(yield res.json());\r\n            }\r\n        }));\r\n        serverEntries = sortBy(tempServerEntries, [\"spent_on\", \"id\"]);\r\n        let element = document.getElementById(\"timeEntriesForm\");\r\n        element.setAttribute(\"class\", \"modal\");\r\n        modalData = { turno: {}, entries: [] };\r\n        refreshTable();\r\n    });\r\n}\r\nfunction handleModalClose() {\r\n    modalData = { turno: {}, entries: new Array() };\r\n}\r\nfunction asyncForEach(array, callback) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        for (let index = 0; index < array.length; index++) {\r\n            yield callback(array[index], index, array);\r\n        }\r\n    });\r\n}\r\nfunction removeModalEntry(event, index) {\r\n    event.preventDefault();\r\n    let tempEntries = Array.from(modalData.entries);\r\n    if (tempEntries.length > 1) {\r\n        tempEntries.splice(index, 1);\r\n        modalData.entries = tempEntries;\r\n    }\r\n}\r\n</script>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <table class=\"table table-sm table-hover\">\n        <thead class=\"thead-dark\">\n          <tr>\n            <th>Date</th>\n            <th>Project</th>\n            <th>Activity</th>\n            <th>Comments</th>\n            <th>Hours</th>\n            <th>\n              <div class=\"form-group form-check\">\n                <input\n                  type=\"checkbox\"\n                  class=\"form-check-input\"\n                  id=\"displayWeekends\"\n                  bind:checked={displayWeekends}\n                  on:change={refreshTable}\n                />\n                <label class=\"form-check-label\" for=\"displayWeekends\">\n                  Display Weekends\n                </label>\n              </div>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {#each displayEntries as timeEntry}\n            <tr class={timeEntry.jornada.diaSemana.toLowerCase()}>\n              <td>{timeEntry.spent_on} {timeEntry.jornada.diaSemana}</td>\n              <td>{timeEntry.project}</td>\n              <td>{timeEntry.activity}</td>\n              <td>{timeEntry.comments}</td>\n              <td>{timeEntry.hours}</td>\n              <td>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-sm {timeEntry.id < 0\n                    ? 'btn-success'\n                    : 'btn-primary'}\"\n                  data-bs-toggle=\"modal\"\n                  data-bs-target=\"#timeEntriesForm\"\n                  on:click={() => handleModalOpen(timeEntry)}\n                >\n                  <i class=\"fas fa-calendar-plus\" />\n                </button>\n              </td>\n            </tr>\n          {/each}\n        </tbody>\n      </table>\n    </div>\n  </div>\n  <!-- Modal -->\n  <div\n    class=\"modal fade\"\n    data-bs-backdrop=\"static\"\n    data-bs-keyboard=\"false\"\n    tabindex=\"-1\"\n    aria-labelledby=\"staticBackdropLabel\"\n    aria-hidden=\"true\"\n    id=\"timeEntriesForm\"\n  >\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header {modalWarning ? 'bg-warning' : ''}\">\n          <h5 class=\"modal-title\" id=\"timeEntriesFormTitle\">\n            Register Time Entries for {modalData.turno.diaSemana}\n            {modalData.turno.fecha}\n          </h5>\n          <button\n            type=\"button\"\n            class=\"btn btn-sm close\"\n            data-bs-dismiss=\"modal\"\n            aria-label=\"Close\"\n            on:click={handleModalClose}\n          >\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <table>\n            <caption>\n              <button\n                type=\"button\"\n                class=\"btn btn-sm btn-info\"\n                on:click={(e) => handleAddEmptyEntryInModal(e)}\n              >\n                <i class=\"fas fa-calendar-plus\" /> Add empty entry\n              </button>\n            </caption>\n            <thead>\n              <tr>\n                <th>Issue</th>\n                <th>Activity</th>\n                <th>Comments</th>\n                <th>Hours</th>\n                <th />\n              </tr>\n            </thead>\n            <tbody>\n              {#each modalData.entries as entry, index}\n                <tr>\n                  <td>\n                    <select\n                      bind:value={entry.issue}\n                      class=\"form-control\"\n                      name=\"Issue\"\n                    >\n                      <option value=\"\" selected>--Select an issue--</option>\n                      {#each $issues as issue (issue.id)}\n                        <option value={issue.id}>\n                          {issue.id}\n                          {issue.project.name}\n                        </option>\n                      {/each}\n                    </select>\n                  </td>\n                  <td>\n                    <select\n                      bind:value={entry.activity}\n                      class=\"form-control\"\n                      name=\"Activity\"\n                    >\n                      <option value=\"\" selected>--Select an activity--</option>\n                      {#each $activities as activity (activity.id)}\n                        <option value={activity.id}>{activity.name}</option>\n                      {/each}\n                    </select>\n                  </td>\n                  <td>\n                    <input\n                      type=\"text\"\n                      bind:value={entry.comments}\n                      class=\"form-control\"\n                      placeholder=\"Comments\"\n                    />\n                  </td>\n                  <td>\n                    <input\n                      type=\"number\"\n                      min=\"0.0\"\n                      max=\"24.0\"\n                      step=\"0.5\"\n                      bind:value={entry.hours}\n                      class=\"form-control\"\n                      placeholder=\"Hours\"\n                    />\n                  </td>\n                  <td>\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-sm btn-danger\"\n                      on:click={(e) => removeModalEntry(e, index)}\n                    >\n                      <i class=\"fas fa-trash\" />\n                    </button>\n                  </td>\n                </tr>\n              {/each}\n            </tbody>\n          </table>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            data-bs-dismiss=\"modal\"\n            on:click={handleModalClose}\n          >\n            Close\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            data-bs-dismiss=\"modal\"\n            on:click={async () => await handleModalSave()}\n          >\n            Submit Time Entries\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<style>\n  td {\n    color: black;\n    text-shadow: 1px 1px lightgrey;\n  }\n  tr.monday {\n    background-color: lightgoldenrodyellow;\n  }\n  tr.tuesday {\n    background-color: lightpink;\n  }\n  tr.wednesday {\n    background-color: lightseagreen;\n  }\n  tr.thursday {\n    background-color: lightsalmon;\n  }\n  tr.friday {\n    background-color: lightsteelblue;\n  }\n  tr.saturday {\n    background-color: wheat;\n  }\n  tr.sunday {\n    background-color: coral;\n  }\n</style>\n","<script lang=\"typescript\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { onMount } from \"svelte\";\r\nimport filter from \"lodash/filter\";\r\nimport sumBy from \"lodash/sumBy\";\r\nimport sortBy from \"lodash/sortBy\";\r\nimport addDays from 'date-fns/addDays';\r\nimport format from 'date-fns/format';\r\nimport startOfMonth from 'date-fns/startOfMonth';\r\nimport endOfMonth from 'date-fns/endOfMonth';\r\nimport { user } from \"../stores/userstore\";\r\nimport { issues } from \"../stores/issuestore\";\r\n;\r\n;\r\n;\r\nlet quincena = [];\r\nlet serverEntries;\r\nlet totalHours = $issues;\r\n$: serverEntries = [];\r\nonMount(() => __awaiter(void 0, void 0, void 0, function* () {\r\n    const now = new Date();\r\n    let from;\r\n    let to;\r\n    if (now.getDate() > 15) {\r\n        from = new Date(now.getFullYear(), now.getMonth(), 16);\r\n        to = endOfMonth(now);\r\n    }\r\n    else {\r\n        from = startOfMonth(now);\r\n        to = new Date(now.getFullYear(), now.getMonth(), 15);\r\n    }\r\n    while (from <= to) {\r\n        const turno = {\r\n            fecha: format(from, \"yyyy-MM-dd\"),\r\n            dia: from.getDay(),\r\n            diaSemana: format(from, \"dddd\"),\r\n        };\r\n        from = addDays(from, 1);\r\n        quincena.push(turno);\r\n    }\r\n    let tempServerEntries = yield refreshTimeEntries();\r\n    calculateTotalHoursPerIssue(tempServerEntries);\r\n    serverEntries = tempServerEntries;\r\n}));\r\nfunction refreshTimeEntries(event) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        let result = [];\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n        if ($user.unauthorized === undefined && quincena.length) {\r\n            const from = quincena[0].fecha;\r\n            const to = quincena[quincena.length - 1].fecha;\r\n            const res = yield fetch(`/api/redmine/timeentries?userId=${$user.id}&from=${from}&to=${to}`, {\r\n                headers: {\r\n                    \"Redmine-Key\": `${$user.api_key}`,\r\n                }\r\n            });\r\n            result = sortBy(yield res.json(), [\"spent_on\", \"id\"]);\r\n        }\r\n        return result;\r\n    });\r\n}\r\nfunction calculateTotalHoursPerIssue(tempServerEntries) {\r\n    let tempIssues = totalHours;\r\n    for (let index = 0; index < tempIssues.length; index++) {\r\n        const issueEntries = filter(tempServerEntries, (o) => o.issue.id === tempIssues[index].id);\r\n        tempIssues[index].spent_hours = sumBy(issueEntries, \"hours\");\r\n    }\r\n    totalHours = tempIssues;\r\n}\r\n</script>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      {#each totalHours as issue (issue.id)}\n        <h5>Total de horas para {issue.project.name} : {issue.spent_hours}</h5>\n      {/each}\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col\">\n      <table class=\"table table-sm table-hover\">\n        <thead class=\"thead-dark\">\n          <tr>\n            <th>Date</th>\n            <th>Activity</th>\n            <th>Comments</th>\n            <th>Hours</th>\n          </tr>\n        </thead>\n        <tbody>\n          {#each serverEntries as timeEntry}\n            <tr>\n              <td>{timeEntry.spent_on}</td>\n              <td>{timeEntry.activity.name}</td>\n              <td>{timeEntry.comments}</td>\n              <td>{timeEntry.hours}</td>\n            </tr>\n          {/each}\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n","<script lang=\"typescript\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { onMount } from \"svelte\";\r\nimport format from \"date-fns/format\";\r\nimport startOfMonth from \"date-fns/startOfMonth\";\r\nimport endOfMonth from \"date-fns/endOfMonth\";\r\nimport { user } from \"../stores/userstore\";\r\nimport { teamMembers } from \"../stores/teammemberstore\";\r\n;\r\nimport { each } from \"svelte/internal\";\r\nimport { memoize } from \"lodash\";\r\nimport TeamMembers from \"./TeamMembers.svelte\";\r\nlet from;\r\nlet to;\r\nlet teamEntriesReport;\r\n$: from = new Date();\r\n$: to = new Date();\r\n$: teamEntriesReport = [];\r\nonMount(() => __awaiter(void 0, void 0, void 0, function* () {\r\n    const now = new Date();\r\n    if (now.getDate() > 15) {\r\n        from = new Date(now.getFullYear(), now.getMonth(), 16);\r\n        to = endOfMonth(now);\r\n    }\r\n    else {\r\n        from = startOfMonth(now);\r\n        to = new Date(now.getFullYear(), now.getMonth(), 15);\r\n    }\r\n    yield refreshTimeEntries();\r\n}));\r\nfunction refreshTimeEntries() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const payload = new FormData();\r\n        payload.append(\"From\", format(from, \"yyyy-MM-dd\"));\r\n        payload.append(\"To\", format(to, \"yyyy-MM-dd\"));\r\n        $teamMembers.forEach((m) => payload.append(\"TeamMembers\", m.toString()));\r\n        const res = yield fetch(\"/api/redmine/teamtimeentries\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Redmine-Key\": `${$user.api_key}`,\r\n            },\r\n            body: payload,\r\n        });\r\n        if (res.ok === true) {\r\n            teamEntriesReport = yield res.json();\r\n        }\r\n    });\r\n}\r\n</script>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <h2>\n        Time entries report for period\n        <small class=\"text-dark bg-info\"\n          >{format(from, \"EEEE, yyyy-MM-dd\")}</small\n        >\n        to\n        <small class=\"text-dark bg-info\">{format(to, \"EEEE, yyyy-MM-dd\")}</small\n        >\n      </h2>\n      <ul>\n        {#each teamEntriesReport as project}\n          <li>\n            {project.project}\n            <ul>\n              {#each project.memberHours as member}\n                <li>{member.name} Hours:{member.hours}</li>\n              {/each}\n            </ul>\n          </li>\n        {/each}\n      </ul>\n    </div>\n  </div>\n</div>\n","<script lang=\"typescript\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { onMount } from \"svelte\";\r\nimport Header from \"./components/Header.svelte\";\r\nimport Index from \"./pages/Index.svelte\";\r\nimport Login from \"./pages/Login.svelte\";\r\nimport Profile from \"./pages/Profile.svelte\";\r\nimport Issues from \"./pages/Issues.svelte\";\r\nimport Templates from \"./pages/Templates.svelte\";\r\nimport TeamMembers from \"./pages/TeamMembers.svelte\";\r\nimport TimeEntries from \"./pages/TimeEntries.svelte\";\r\nimport Report from \"./pages/Report.svelte\";\r\nimport TLEReport from \"./pages/TLEReport.svelte\";\r\nimport { user } from \"./stores/userstore\";\r\nfunction routeHandler(event, route) {\r\n    event ? event.preventDefault() : () => { };\r\n    window.history.replaceState(null, routeTranslator(route), route);\r\n    currentRoute = route;\r\n}\r\nfunction routeTranslator(route) {\r\n    let result;\r\n    switch (route) {\r\n        case \"/login\":\r\n            result = \"Login\";\r\n            break;\r\n        case \"/user/profile\":\r\n            result = \"Profile\";\r\n            break;\r\n        case \"/user/issues\":\r\n            result = \"Issues\";\r\n            break;\r\n        case \"/user/templates\":\r\n            result = \"Templates\";\r\n            break;\r\n        case \"/tle/teammembers\":\r\n            result = \"Team Members\";\r\n            break;\r\n        case \"/user/timeentries\":\r\n            result = \"Time Entries\";\r\n            break;\r\n        case \"/user/report\":\r\n            result = \"Time Card\";\r\n            break;\r\n        case \"/tle/report\":\r\n            result = \"Team Lead Report\";\r\n            break;\r\n        default:\r\n            result = \"Index\";\r\n            break;\r\n    }\r\n    return result;\r\n}\r\nlet leadIds;\r\nlet currentRoute;\r\nlet isLead;\r\n$: currentRoute = \"/\";\r\n$: leadIds = [];\r\n$: isLead = false;\r\nonMount(() => __awaiter(void 0, void 0, void 0, function* () {\r\n    routeHandler(null, window.location.pathname);\r\n    const res = yield fetch(\"/api/redmine/leads\");\r\n    if (res.ok === true) {\r\n        leadIds = JSON.parse(yield res.text());\r\n    }\r\n    if (leadIds.find((i) => i === $user.id)) {\r\n        isLead = true;\r\n    }\r\n}));\r\n</script>\n\n<Header handleNavigation={routeHandler} {isLead} />\n{#if currentRoute === \"/\"}\n  <Index />\n{:else if currentRoute === \"/login\" && $user.unauthorized === true}\n  <Login handleNavigation={routeHandler} />\n{:else if currentRoute === \"/user/profile\" && $user.unauthorized === undefined}\n  <Profile />\n{:else if currentRoute === \"/user/issues\" && $user.unauthorized === undefined}\n  <Issues />\n{:else if currentRoute === \"/user/templates\" && $user.unauthorized === undefined}\n  <Templates />\n{:else if currentRoute === \"/tle/teammembers\" && isLead === true}\n  <TeamMembers />\n{:else if currentRoute === \"/user/timeentries\" && $user.unauthorized === undefined}\n  <TimeEntries />\n{:else if currentRoute === \"/user/report\" && $user.unauthorized === undefined}\n  <Report />\n{:else if currentRoute === \"/tle/report\" && $user.unauthorized === undefined}\n  <TLEReport />\n{:else}\n  <Index />\n{/if}\n","import App from './App.svelte';\r\nconst app = new App({\r\n    target: document.body\r\n});\r\nexport default app;\r\n"],"sourceRoot":""}